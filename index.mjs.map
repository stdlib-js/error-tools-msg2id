{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport database from '@stdlib/error-tools-database';\nimport inverse from '@stdlib/utils-object-inverse';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// VARIABLES //\n\nvar db;\n\n\n// MAIN //\n\n/**\n* Returns a two-character error identifier corresponding to a provided error message.\n*\n* @param {string} msg - error message\n* @throws {TypeError} must provide a string\n* @returns {(string|null)} two-character error identifier\n*\n* @example\n* var v = msg2id( 'invalid option. `%s` option must be an array. Option: `%s`.' );\n* // returns 'GX'\n*/\nfunction msg2id( msg ) {\n\tif ( !isString( msg ) ) {\n\t\tthrow new TypeError( format( '0Nx3B', msg ) );\n\t}\n\tif ( !db ) {\n\t\tdb = inverse( database(), {\n\t\t\t'duplicates': false\n\t\t});\n\t}\n\tif ( hasOwnProp( db, msg ) ) {\n\t\treturn db[ msg ];\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default msg2id;\n"],"names":["db","msg2id","msg","isString","TypeError","format","inverse","database","duplicates","hasOwnProp"],"mappings":";;2eA+BA,IAAIA,EAgBJ,SAASC,EAAQC,GAChB,IAAMC,EAAUD,GACf,MAAM,IAAIE,UAAWC,EAAQ,QAASH,IAOvC,OALMF,IACLA,EAAKM,EAASC,IAAY,CACzBC,YAAc,KAGXC,EAAYT,EAAIE,GACbF,EAAIE,GAEL,IACR"}