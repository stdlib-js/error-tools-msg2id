// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var n=Object.defineProperty;function t(e){return"number"==typeof e}function a(e){var n,t="";for(n=0;n<e;n++)t+="0";return t}function i(e,n,t){var i=!1,r=n-e.length;return r<0||(function(e){return"-"===e[0]}(e)&&(i=!0,e=e.substr(1)),e=t?e+a(r):a(r)+e,i&&(e="-"+e)),e}var r=String.prototype.toLowerCase,o=String.prototype.toUpperCase;function u(e){var n,a,u;switch(e.specifier){case"b":n=2;break;case"o":n=8;break;case"x":case"X":n=16;break;default:n=10}if(a=e.arg,u=parseInt(a,10),!isFinite(u)){if(!t(a))throw new Error("invalid integer. Value: "+a);u=0}return u<0&&("u"===e.specifier||10!==n)&&(u=4294967295+u+1),u<0?(a=(-u).toString(n),e.precision&&(a=i(a,e.precision,e.padRight)),a="-"+a):(a=u.toString(n),u||e.precision?e.precision&&(a=i(a,e.precision,e.padRight)):a="",e.sign&&(a=e.sign+a)),16===n&&(e.alternate&&(a="0x"+a),a=e.specifier===o.call(e.specifier)?o.call(a):r.call(a)),8===n&&e.alternate&&"0"!==a.charAt(0)&&(a="0"+a),a}var s=Math.abs,l=String.prototype.toLowerCase,m=String.prototype.toUpperCase,d=String.prototype.replace,g=/e\+(\d)$/,c=/e-(\d)$/,p=/^(\d+)$/,v=/^(\d+)e/,f=/\.0$/,h=/\.0*e/,b=/(\..*[^0])0*e/;function y(e){var n,a,i=parseFloat(e.arg);if(!isFinite(i)){if(!t(e.arg))throw new Error("invalid floating-point number. Value: "+a);i=e.arg}switch(e.specifier){case"e":case"E":a=i.toExponential(e.precision);break;case"f":case"F":a=i.toFixed(e.precision);break;case"g":case"G":s(i)<1e-4?((n=e.precision)>0&&(n-=1),a=i.toExponential(n)):a=i.toPrecision(e.precision),e.alternate||(a=d.call(a,b,"$1e"),a=d.call(a,h,"e"),a=d.call(a,f,""));break;default:throw new Error("invalid double notation. Value: "+e.specifier)}return a=d.call(a,g,"e+0$1"),a=d.call(a,c,"e-0$1"),e.alternate&&(a=d.call(a,p,"$1."),a=d.call(a,v,"$1.e")),i>=0&&e.sign&&(a=e.sign+a),a=e.specifier===m.call(e.specifier)?m.call(a):l.call(a)}function V(e){var n,t="";for(n=0;n<e;n++)t+=" ";return t}var w=String.fromCharCode,A=Array.isArray;function x(e){return e!=e}function E(e){var n={};return n.specifier=e.specifier,n.precision=void 0===e.precision?1:e.precision,n.width=e.width,n.flags=e.flags||"",n.mapping=e.mapping,n}function F(e){var n,t,a,r,o,s,l,m,d,g,c,p,v;if(!A(e))throw new TypeError("invalid argument. First argument must be an array. Value: `"+e+"`.");for(s="",l=1,m=0;m<e.length;m++)if(a=e[m],"string"==typeof a)s+=a;else{if(n=void 0!==a.precision,!(a=E(a)).specifier)throw new TypeError("invalid argument. Token is missing `specifier` property. Index: `"+m+"`. Value: `"+a+"`.");for(a.mapping&&(l=a.mapping),t=a.flags,d=0;d<t.length;d++)switch(r=t.charAt(d)){case" ":a.sign=" ";break;case"+":a.sign="+";break;case"-":a.padRight=!0,a.padZeros=!1;break;case"0":a.padZeros=t.indexOf("-")<0;break;case"#":a.alternate=!0;break;default:throw new Error("invalid flag: "+r)}if("*"===a.width){if(a.width=parseInt(arguments[l],10),l+=1,x(a.width))throw new TypeError("the argument for * width at position "+l+" is not a number. Value: `"+a.width+"`.");a.width<0&&(a.padRight=!0,a.width=-a.width)}if(n&&"*"===a.precision){if(a.precision=parseInt(arguments[l],10),l+=1,x(a.precision))throw new TypeError("the argument for * precision at position "+l+" is not a number. Value: `"+a.precision+"`.");a.precision<0&&(a.precision=1,n=!1)}switch(a.arg=arguments[l],a.specifier){case"b":case"o":case"x":case"X":case"d":case"i":case"u":n&&(a.padZeros=!1),a.arg=u(a);break;case"s":a.maxWidth=n?a.precision:-1,a.arg=String(a.arg);break;case"c":if(!x(a.arg)){if((o=parseInt(a.arg,10))<0||o>127)throw new Error("invalid character code. Value: "+a.arg);a.arg=x(o)?String(a.arg):w(o)}break;case"e":case"E":case"f":case"F":case"g":case"G":n||(a.precision=6),a.arg=y(a);break;default:throw new Error("invalid specifier: "+a.specifier)}a.maxWidth>=0&&a.arg.length>a.maxWidth&&(a.arg=a.arg.substring(0,a.maxWidth)),a.padZeros?a.arg=i(a.arg,a.width||a.precision,a.padRight):a.width&&(a.arg=(g=a.arg,c=a.width,p=a.padRight,v=void 0,(v=c-g.length)<0?g:g=p?g+V(v):V(v)+g)),s+=a.arg||"",l+=1}return s}var j=/%(?:([1-9]\d*)\$)?([0 +\-#]*)(\*|\d+)?(?:(\.)(\*|\d+)?)?[hlL]?([%A-Za-z])/g;function S(e){var n={mapping:e[1]?parseInt(e[1],10):void 0,flags:e[2],width:e[3],precision:e[5],specifier:e[6]};return"."===e[4]&&void 0===e[5]&&(n.precision="1"),n}function O(e){var n,t,a,i;for(t=[],i=0,a=j.exec(e);a;)(n=e.slice(i,j.lastIndex-a[0].length)).length&&t.push(n),t.push(S(a)),i=j.lastIndex,a=j.exec(e);return(n=e.slice(i)).length&&t.push(n),t}function M(e){var n,t;if("string"!=typeof e)throw new TypeError(M("invalid argument. First argument must be a string. Value: `%s`.",e));for(n=[O(e)],t=1;t<arguments.length;t++)n.push(arguments[t]);return F.apply(null,n)}var k,I=Object.prototype,T=I.toString,B=I.__defineGetter__,C=I.__defineSetter__,U=I.__lookupGetter__,P=I.__lookupSetter__;k=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?n:function(e,n,t){var a,i,r,o;if("object"!=typeof e||null===e||"[object Array]"===T.call(e))throw new TypeError(M("invalid argument. First argument must be an object. Value: `%s`.",e));if("object"!=typeof t||null===t||"[object Array]"===T.call(t))throw new TypeError(M("invalid argument. Property descriptor must be an object. Value: `%s`.",t));if((i="value"in t)&&(U.call(e,n)||P.call(e,n)?(a=e.__proto__,e.__proto__=I,delete e[n],e[n]=t.value,e.__proto__=a):e[n]=t.value),r="get"in t,o="set"in t,i&&(r||o))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return r&&B&&B.call(e,n,t.get),o&&C&&C.call(e,n,t.set),e};var D=k;function R(e,n,t){D(e,n,{configurable:!1,enumerable:!1,writable:!1,value:t})}function z(e){return"string"==typeof e}var N="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function _(){return N&&"symbol"==typeof Symbol.toStringTag}var q=Object.prototype.toString;var L=Object.prototype.hasOwnProperty;function Y(e,n){return null!=e&&L.call(e,n)}var G="function"==typeof Symbol?Symbol:void 0,W="function"==typeof G?G.toStringTag:"";var X=_()?function(e){var n,t,a;if(null==e)return q.call(e);t=e[W],n=Y(e,W);try{e[W]=void 0}catch(n){return q.call(e)}return a=q.call(e),n?e[W]=t:delete e[W],a}:function(e){return q.call(e)},J=String.prototype.valueOf;var Z=_();function H(e){return"object"==typeof e&&(e instanceof String||(Z?function(e){try{return J.call(e),!0}catch(e){return!1}}(e):"[object String]"===X(e)))}function K(e){return z(e)||H(e)}R(K,"isPrimitive",z),R(K,"isObject",H);var Q=Array.isArray?Array.isArray:function(e){return"[object Array]"===X(e)};function $(e){return"number"==typeof e}var ee=Number,ne=ee.prototype.toString;var te=_();function ae(e){return"object"==typeof e&&(e instanceof ee||(te?function(e){try{return ne.call(e),!0}catch(e){return!1}}(e):"[object Number]"===X(e)))}function ie(e){return $(e)||ae(e)}R(ie,"isPrimitive",$),R(ie,"isObject",ae);var re=Number.POSITIVE_INFINITY,oe=ee.NEGATIVE_INFINITY,ue=Math.floor;function se(e){return ue(e)===e}function le(e){return e<re&&e>oe&&se(e)}function me(e){return $(e)&&le(e)}function de(e){return ae(e)&&le(e.valueOf())}function ge(e){return me(e)||de(e)}function ce(e){return me(e)&&e>=0}function pe(e){return de(e)&&e.valueOf()>=0}function ve(e){return ce(e)||pe(e)}function fe(e){return null!==e&&"object"==typeof e}function he(e){return fe(e)&&(e._isBuffer||e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e))}R(ge,"isPrimitive",me),R(ge,"isObject",de),R(ve,"isPrimitive",ce),R(ve,"isObject",pe),R(fe,"isObjectLikeArray",function(e){if("function"!=typeof e)throw new TypeError(M("invalid argument. Must provide a function. Value: `%s`.",e));return function(n){var t,a;if(!Q(n))return!1;if(0===(t=n.length))return!1;for(a=0;a<t;a++)if(!1===e(n[a]))return!1;return!0}}(fe));var be=Object,ye=/./;function Ve(e){return"boolean"==typeof e}var we=Boolean,Ae=Boolean.prototype.toString;var xe=_();function Ee(e){return"object"==typeof e&&(e instanceof we||(xe?function(e){try{return Ae.call(e),!0}catch(e){return!1}}(e):"[object Boolean]"===X(e)))}function Fe(e){return Ve(e)||Ee(e)}R(Fe,"isPrimitive",Ve),R(Fe,"isObject",Ee);var je="object"==typeof self?self:null,Se="object"==typeof window?window:null,Oe="undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},Me="object"==typeof Oe?Oe:null,ke="object"==typeof globalThis?globalThis:null;var Ie=function(e){if(arguments.length){if(!Ve(e))throw new TypeError(M("invalid argument. Must provide a boolean. Value: `%s`.",e));if(e)return new Function("return this;")()}if(ke)return ke;if(je)return je;if(Se)return Se;if(Me)return Me;throw new Error("unexpected error. Unable to resolve global object.")}(),Te=Ie.document&&Ie.document.childNodes,Be=Int8Array;function Ce(){return/^\s*function\s*([^(]*)/i}var Ue=/^\s*function\s*([^(]*)/i;function Pe(e){var n,t,a;if(("Object"===(t=X(e).slice(8,-1))||"Error"===t)&&e.constructor){if("string"==typeof(a=e.constructor).name)return a.name;if(n=Ue.exec(a.toString()))return n[1]}return he(e)?"Buffer":t}R(Ce,"REGEXP",Ue);var De="function"==typeof ye||"object"==typeof Be||"function"==typeof Te?function(e){return Pe(e).toLowerCase()}:function(e){var n;return null===e?"null":"object"===(n=typeof e)?Pe(e).toLowerCase():n};function Re(e){return"function"===De(e)}var ze,Ne=Object.getPrototypeOf;ze=Re(Object.getPrototypeOf)?Ne:function(e){var n=function(e){return e.__proto__}(e);return n||null===n?n:"[object Function]"===X(e.constructor)?e.constructor.prototype:e instanceof Object?Object.prototype:null};var _e=ze;function qe(e){return null==e?null:(e=be(e),_e(e))}function Le(){return/^\/((?:\\\/|[^\/])+)\/([imgy]*)$/}function Ye(e){return e!=e}function Ge(e){return $(e)&&Ye(e)}function We(e){return ae(e)&&Ye(e.valueOf())}function Xe(e){return Ge(e)||We(e)}R(Le,"REGEXP",/^\/((?:\\\/|[^\/])+)\/([imgy]*)$/),R(Xe,"isPrimitive",Ge),R(Xe,"isObject",We);var Je=9007199254740991;function Ze(e,n,t){var a,i,r;if(!(r=e,"object"==typeof r&&null!==r&&"number"==typeof r.length&&se(r.length)&&r.length>=0&&r.length<=Je||z(e)))throw new TypeError(M("invalid argument. First argument must be an array-like object. Value: `%s`.",e));if(0===(a=e.length))return-1;if(3===arguments.length){if(!me(t))throw new TypeError(M("invalid argument. Third argument must be an integer. Value: `%s`.",t));if(t>=0){if(t>=a)return-1;i=t}else(i=a+t)<0&&(i=0)}else i=0;if(Xe(n)){for(;i<a;i++)if(Xe(e[i]))return i}else for(;i<a;i++)if(e[i]===n)return i;return-1}function He(e){return Object.keys(Object(e))}var Ke=void 0!==Object.keys;function Qe(e){return"[object Arguments]"===X(e)}var $e=function(){return Qe(arguments)}(),en=Object.prototype.propertyIsEnumerable;var nn=!en.call("beep","0");function tn(e,n){var t;return null!=e&&(!(t=en.call(e,n))&&nn&&K(e)?!Ge(n=+n)&&me(n)&&n>=0&&n<e.length:t)}var an=4294967295;var rn=$e?Qe:function(e){return null!==e&&"object"==typeof e&&!Q(e)&&"number"==typeof e.length&&se(e.length)&&e.length>=0&&e.length<=an&&Y(e,"callee")&&!tn(e,"callee")},on=Array.prototype.slice;var un=tn((function(){}),"prototype"),sn=!tn({toString:null},"toString");function ln(e){return e.constructor&&e.constructor.prototype===e}var mn=["console","external","frame","frameElement","frames","innerHeight","innerWidth","outerHeight","outerWidth","pageXOffset","pageYOffset","parent","scrollLeft","scrollTop","scrollX","scrollY","self","webkitIndexedDB","webkitStorageInfo","window"],dn="undefined"==typeof window?void 0:window;var gn=function(){var e;if("undefined"===De(dn))return!1;for(e in dn)try{-1===Ze(mn,e)&&Y(dn,e)&&null!==dn[e]&&"object"===De(dn[e])&&ln(dn[e])}catch(e){return!0}return!1}(),cn="undefined"!=typeof window;var pn=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"];var vn=Ke?function(){return 2!==(He(arguments)||"").length}(1,2)?function(e){return rn(e)?He(on.call(e)):He(e)}:He:function(e){var n,t,a,i,r,o,u;if(i=[],rn(e)){for(u=0;u<e.length;u++)i.push(u.toString());return i}if("string"==typeof e){if(e.length>0&&!Y(e,"0"))for(u=0;u<e.length;u++)i.push(u.toString())}else{if(!1==(a="function"==typeof e)&&!fe(e))return i;t=un&&a}for(r in e)t&&"prototype"===r||!Y(e,r)||i.push(String(r));if(sn)for(n=function(e){if(!1===cn&&!gn)return ln(e);try{return ln(e)}catch(e){return!1}}(e),u=0;u<pn.length;u++)o=pn[u],n&&"constructor"===o||!Y(e,o)||i.push(String(o));return i},fn=void 0!==Object.getOwnPropertyNames,hn=be.getOwnPropertyNames;var bn=fn?function(e){return hn(be(e))}:function(e){return vn(be(e))},yn=void 0!==Object.getOwnPropertyDescriptor,Vn=Object.getOwnPropertyDescriptor;var wn=yn?function(e,n){var t;return null==e||void 0===(t=Vn(e,n))?null:t}:function(e,n){return Y(e,n)?{configurable:!0,enumerable:!0,writable:!0,value:e[n]}:null},An=[],xn=[],En="undefined"!=typeof Uint8Array?Uint8Array:Array,Fn=!1;function jn(){Fn=!0;for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",n=0;n<64;++n)An[n]=e[n],xn[e.charCodeAt(n)]=n;xn["-".charCodeAt(0)]=62,xn["_".charCodeAt(0)]=63}function Sn(e,n,t){for(var a,i,r=[],o=n;o<t;o+=3)a=(e[o]<<16)+(e[o+1]<<8)+e[o+2],r.push(An[(i=a)>>18&63]+An[i>>12&63]+An[i>>6&63]+An[63&i]);return r.join("")}function On(e){var n;Fn||jn();for(var t=e.length,a=t%3,i="",r=[],o=16383,u=0,s=t-a;u<s;u+=o)r.push(Sn(e,u,u+o>s?s:u+o));return 1===a?(n=e[t-1],i+=An[n>>2],i+=An[n<<4&63],i+="=="):2===a&&(n=(e[t-2]<<8)+e[t-1],i+=An[n>>10],i+=An[n>>4&63],i+=An[n<<2&63],i+="="),r.push(i),r.join("")}function Mn(e,n,t,a,i){var r,o,u=8*i-a-1,s=(1<<u)-1,l=s>>1,m=-7,d=t?i-1:0,g=t?-1:1,c=e[n+d];for(d+=g,r=c&(1<<-m)-1,c>>=-m,m+=u;m>0;r=256*r+e[n+d],d+=g,m-=8);for(o=r&(1<<-m)-1,r>>=-m,m+=a;m>0;o=256*o+e[n+d],d+=g,m-=8);if(0===r)r=1-l;else{if(r===s)return o?NaN:1/0*(c?-1:1);o+=Math.pow(2,a),r-=l}return(c?-1:1)*o*Math.pow(2,r-a)}function kn(e,n,t,a,i,r){var o,u,s,l=8*r-i-1,m=(1<<l)-1,d=m>>1,g=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,c=a?0:r-1,p=a?1:-1,v=n<0||0===n&&1/n<0?1:0;for(n=Math.abs(n),isNaN(n)||n===1/0?(u=isNaN(n)?1:0,o=m):(o=Math.floor(Math.log(n)/Math.LN2),n*(s=Math.pow(2,-o))<1&&(o--,s*=2),(n+=o+d>=1?g/s:g*Math.pow(2,1-d))*s>=2&&(o++,s/=2),o+d>=m?(u=0,o=m):o+d>=1?(u=(n*s-1)*Math.pow(2,i),o+=d):(u=n*Math.pow(2,d-1)*Math.pow(2,i),o=0));i>=8;e[t+c]=255&u,c+=p,u/=256,i-=8);for(o=o<<i|u,l+=i;l>0;e[t+c]=255&o,c+=p,o/=256,l-=8);e[t+c-p]|=128*v}var In={}.toString,Tn=Array.isArray||function(e){return"[object Array]"==In.call(e)};Pn.TYPED_ARRAY_SUPPORT=void 0===Oe.TYPED_ARRAY_SUPPORT||Oe.TYPED_ARRAY_SUPPORT;var Bn=Cn();function Cn(){return Pn.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function Un(e,n){if(Cn()<n)throw new RangeError("Invalid typed array length");return Pn.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(n)).__proto__=Pn.prototype:(null===e&&(e=new Pn(n)),e.length=n),e}function Pn(e,n,t){if(!(Pn.TYPED_ARRAY_SUPPORT||this instanceof Pn))return new Pn(e,n,t);if("number"==typeof e){if("string"==typeof n)throw new Error("If encoding is specified then the first argument must be a string");return zn(this,e)}return Dn(this,e,n,t)}function Dn(e,n,t,a){if("number"==typeof n)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&n instanceof ArrayBuffer?function(e,n,t,a){if(n.byteLength,t<0||n.byteLength<t)throw new RangeError("'offset' is out of bounds");if(n.byteLength<t+(a||0))throw new RangeError("'length' is out of bounds");n=void 0===t&&void 0===a?new Uint8Array(n):void 0===a?new Uint8Array(n,t):new Uint8Array(n,t,a);Pn.TYPED_ARRAY_SUPPORT?(e=n).__proto__=Pn.prototype:e=Nn(e,n);return e}(e,n,t,a):"string"==typeof n?function(e,n,t){"string"==typeof t&&""!==t||(t="utf8");if(!Pn.isEncoding(t))throw new TypeError('"encoding" must be a valid string encoding');var a=0|Ln(n,t);e=Un(e,a);var i=e.write(n,t);i!==a&&(e=e.slice(0,i));return e}(e,n,t):function(e,n){if(qn(n)){var t=0|_n(n.length);return 0===(e=Un(e,t)).length||n.copy(e,0,0,t),e}if(n){if("undefined"!=typeof ArrayBuffer&&n.buffer instanceof ArrayBuffer||"length"in n)return"number"!=typeof n.length||(a=n.length)!=a?Un(e,0):Nn(e,n);if("Buffer"===n.type&&Tn(n.data))return Nn(e,n.data)}var a;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,n)}function Rn(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function zn(e,n){if(Rn(n),e=Un(e,n<0?0:0|_n(n)),!Pn.TYPED_ARRAY_SUPPORT)for(var t=0;t<n;++t)e[t]=0;return e}function Nn(e,n){var t=n.length<0?0:0|_n(n.length);e=Un(e,t);for(var a=0;a<t;a+=1)e[a]=255&n[a];return e}function _n(e){if(e>=Cn())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+Cn().toString(16)+" bytes");return 0|e}function qn(e){return!(null==e||!e._isBuffer)}function Ln(e,n){if(qn(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var t=e.length;if(0===t)return 0;for(var a=!1;;)switch(n){case"ascii":case"latin1":case"binary":return t;case"utf8":case"utf-8":case void 0:return ft(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*t;case"hex":return t>>>1;case"base64":return ht(e).length;default:if(a)return ft(e).length;n=(""+n).toLowerCase(),a=!0}}function Yn(e,n,t){var a=!1;if((void 0===n||n<0)&&(n=0),n>this.length)return"";if((void 0===t||t>this.length)&&(t=this.length),t<=0)return"";if((t>>>=0)<=(n>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return rt(this,n,t);case"utf8":case"utf-8":return nt(this,n,t);case"ascii":return at(this,n,t);case"latin1":case"binary":return it(this,n,t);case"base64":return et(this,n,t);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ot(this,n,t);default:if(a)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),a=!0}}function Gn(e,n,t){var a=e[n];e[n]=e[t],e[t]=a}function Wn(e,n,t,a,i){if(0===e.length)return-1;if("string"==typeof t?(a=t,t=0):t>2147483647?t=2147483647:t<-2147483648&&(t=-2147483648),t=+t,isNaN(t)&&(t=i?0:e.length-1),t<0&&(t=e.length+t),t>=e.length){if(i)return-1;t=e.length-1}else if(t<0){if(!i)return-1;t=0}if("string"==typeof n&&(n=Pn.from(n,a)),qn(n))return 0===n.length?-1:Xn(e,n,t,a,i);if("number"==typeof n)return n&=255,Pn.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,n,t):Uint8Array.prototype.lastIndexOf.call(e,n,t):Xn(e,[n],t,a,i);throw new TypeError("val must be string, number or Buffer")}function Xn(e,n,t,a,i){var r,o=1,u=e.length,s=n.length;if(void 0!==a&&("ucs2"===(a=String(a).toLowerCase())||"ucs-2"===a||"utf16le"===a||"utf-16le"===a)){if(e.length<2||n.length<2)return-1;o=2,u/=2,s/=2,t/=2}function l(e,n){return 1===o?e[n]:e.readUInt16BE(n*o)}if(i){var m=-1;for(r=t;r<u;r++)if(l(e,r)===l(n,-1===m?0:r-m)){if(-1===m&&(m=r),r-m+1===s)return m*o}else-1!==m&&(r-=r-m),m=-1}else for(t+s>u&&(t=u-s),r=t;r>=0;r--){for(var d=!0,g=0;g<s;g++)if(l(e,r+g)!==l(n,g)){d=!1;break}if(d)return r}return-1}function Jn(e,n,t,a){t=Number(t)||0;var i=e.length-t;a?(a=Number(a))>i&&(a=i):a=i;var r=n.length;if(r%2!=0)throw new TypeError("Invalid hex string");a>r/2&&(a=r/2);for(var o=0;o<a;++o){var u=parseInt(n.substr(2*o,2),16);if(isNaN(u))return o;e[t+o]=u}return o}function Zn(e,n,t,a){return bt(ft(n,e.length-t),e,t,a)}function Hn(e,n,t,a){return bt(function(e){for(var n=[],t=0;t<e.length;++t)n.push(255&e.charCodeAt(t));return n}(n),e,t,a)}function Kn(e,n,t,a){return Hn(e,n,t,a)}function Qn(e,n,t,a){return bt(ht(n),e,t,a)}function $n(e,n,t,a){return bt(function(e,n){for(var t,a,i,r=[],o=0;o<e.length&&!((n-=2)<0);++o)a=(t=e.charCodeAt(o))>>8,i=t%256,r.push(i),r.push(a);return r}(n,e.length-t),e,t,a)}function et(e,n,t){return 0===n&&t===e.length?On(e):On(e.slice(n,t))}function nt(e,n,t){t=Math.min(e.length,t);for(var a=[],i=n;i<t;){var r,o,u,s,l=e[i],m=null,d=l>239?4:l>223?3:l>191?2:1;if(i+d<=t)switch(d){case 1:l<128&&(m=l);break;case 2:128==(192&(r=e[i+1]))&&(s=(31&l)<<6|63&r)>127&&(m=s);break;case 3:r=e[i+1],o=e[i+2],128==(192&r)&&128==(192&o)&&(s=(15&l)<<12|(63&r)<<6|63&o)>2047&&(s<55296||s>57343)&&(m=s);break;case 4:r=e[i+1],o=e[i+2],u=e[i+3],128==(192&r)&&128==(192&o)&&128==(192&u)&&(s=(15&l)<<18|(63&r)<<12|(63&o)<<6|63&u)>65535&&s<1114112&&(m=s)}null===m?(m=65533,d=1):m>65535&&(m-=65536,a.push(m>>>10&1023|55296),m=56320|1023&m),a.push(m),i+=d}return function(e){var n=e.length;if(n<=tt)return String.fromCharCode.apply(String,e);var t="",a=0;for(;a<n;)t+=String.fromCharCode.apply(String,e.slice(a,a+=tt));return t}(a)}Pn.poolSize=8192,Pn._augment=function(e){return e.__proto__=Pn.prototype,e},Pn.from=function(e,n,t){return Dn(null,e,n,t)},Pn.TYPED_ARRAY_SUPPORT&&(Pn.prototype.__proto__=Uint8Array.prototype,Pn.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&Pn[Symbol.species]),Pn.alloc=function(e,n,t){return function(e,n,t,a){return Rn(n),n<=0?Un(e,n):void 0!==t?"string"==typeof a?Un(e,n).fill(t,a):Un(e,n).fill(t):Un(e,n)}(null,e,n,t)},Pn.allocUnsafe=function(e){return zn(null,e)},Pn.allocUnsafeSlow=function(e){return zn(null,e)},Pn.isBuffer=yt,Pn.compare=function(e,n){if(!qn(e)||!qn(n))throw new TypeError("Arguments must be Buffers");if(e===n)return 0;for(var t=e.length,a=n.length,i=0,r=Math.min(t,a);i<r;++i)if(e[i]!==n[i]){t=e[i],a=n[i];break}return t<a?-1:a<t?1:0},Pn.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Pn.concat=function(e,n){if(!Tn(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return Pn.alloc(0);var t;if(void 0===n)for(n=0,t=0;t<e.length;++t)n+=e[t].length;var a=Pn.allocUnsafe(n),i=0;for(t=0;t<e.length;++t){var r=e[t];if(!qn(r))throw new TypeError('"list" argument must be an Array of Buffers');r.copy(a,i),i+=r.length}return a},Pn.byteLength=Ln,Pn.prototype._isBuffer=!0,Pn.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var n=0;n<e;n+=2)Gn(this,n,n+1);return this},Pn.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var n=0;n<e;n+=4)Gn(this,n,n+3),Gn(this,n+1,n+2);return this},Pn.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var n=0;n<e;n+=8)Gn(this,n,n+7),Gn(this,n+1,n+6),Gn(this,n+2,n+5),Gn(this,n+3,n+4);return this},Pn.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?nt(this,0,e):Yn.apply(this,arguments)},Pn.prototype.equals=function(e){if(!qn(e))throw new TypeError("Argument must be a Buffer");return this===e||0===Pn.compare(this,e)},Pn.prototype.inspect=function(){var e="";return this.length>0&&(e=this.toString("hex",0,50).match(/.{2}/g).join(" "),this.length>50&&(e+=" ... ")),"<Buffer "+e+">"},Pn.prototype.compare=function(e,n,t,a,i){if(!qn(e))throw new TypeError("Argument must be a Buffer");if(void 0===n&&(n=0),void 0===t&&(t=e?e.length:0),void 0===a&&(a=0),void 0===i&&(i=this.length),n<0||t>e.length||a<0||i>this.length)throw new RangeError("out of range index");if(a>=i&&n>=t)return 0;if(a>=i)return-1;if(n>=t)return 1;if(this===e)return 0;for(var r=(i>>>=0)-(a>>>=0),o=(t>>>=0)-(n>>>=0),u=Math.min(r,o),s=this.slice(a,i),l=e.slice(n,t),m=0;m<u;++m)if(s[m]!==l[m]){r=s[m],o=l[m];break}return r<o?-1:o<r?1:0},Pn.prototype.includes=function(e,n,t){return-1!==this.indexOf(e,n,t)},Pn.prototype.indexOf=function(e,n,t){return Wn(this,e,n,t,!0)},Pn.prototype.lastIndexOf=function(e,n,t){return Wn(this,e,n,t,!1)},Pn.prototype.write=function(e,n,t,a){if(void 0===n)a="utf8",t=this.length,n=0;else if(void 0===t&&"string"==typeof n)a=n,t=this.length,n=0;else{if(!isFinite(n))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");n|=0,isFinite(t)?(t|=0,void 0===a&&(a="utf8")):(a=t,t=void 0)}var i=this.length-n;if((void 0===t||t>i)&&(t=i),e.length>0&&(t<0||n<0)||n>this.length)throw new RangeError("Attempt to write outside buffer bounds");a||(a="utf8");for(var r=!1;;)switch(a){case"hex":return Jn(this,e,n,t);case"utf8":case"utf-8":return Zn(this,e,n,t);case"ascii":return Hn(this,e,n,t);case"latin1":case"binary":return Kn(this,e,n,t);case"base64":return Qn(this,e,n,t);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return $n(this,e,n,t);default:if(r)throw new TypeError("Unknown encoding: "+a);a=(""+a).toLowerCase(),r=!0}},Pn.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var tt=4096;function at(e,n,t){var a="";t=Math.min(e.length,t);for(var i=n;i<t;++i)a+=String.fromCharCode(127&e[i]);return a}function it(e,n,t){var a="";t=Math.min(e.length,t);for(var i=n;i<t;++i)a+=String.fromCharCode(e[i]);return a}function rt(e,n,t){var a=e.length;(!n||n<0)&&(n=0),(!t||t<0||t>a)&&(t=a);for(var i="",r=n;r<t;++r)i+=vt(e[r]);return i}function ot(e,n,t){for(var a=e.slice(n,t),i="",r=0;r<a.length;r+=2)i+=String.fromCharCode(a[r]+256*a[r+1]);return i}function ut(e,n,t){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+n>t)throw new RangeError("Trying to access beyond buffer length")}function st(e,n,t,a,i,r){if(!qn(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(n>i||n<r)throw new RangeError('"value" argument is out of bounds');if(t+a>e.length)throw new RangeError("Index out of range")}function lt(e,n,t,a){n<0&&(n=65535+n+1);for(var i=0,r=Math.min(e.length-t,2);i<r;++i)e[t+i]=(n&255<<8*(a?i:1-i))>>>8*(a?i:1-i)}function mt(e,n,t,a){n<0&&(n=4294967295+n+1);for(var i=0,r=Math.min(e.length-t,4);i<r;++i)e[t+i]=n>>>8*(a?i:3-i)&255}function dt(e,n,t,a,i,r){if(t+a>e.length)throw new RangeError("Index out of range");if(t<0)throw new RangeError("Index out of range")}function gt(e,n,t,a,i){return i||dt(e,0,t,4),kn(e,n,t,a,23,4),t+4}function ct(e,n,t,a,i){return i||dt(e,0,t,8),kn(e,n,t,a,52,8),t+8}Pn.prototype.slice=function(e,n){var t,a=this.length;if((e=~~e)<0?(e+=a)<0&&(e=0):e>a&&(e=a),(n=void 0===n?a:~~n)<0?(n+=a)<0&&(n=0):n>a&&(n=a),n<e&&(n=e),Pn.TYPED_ARRAY_SUPPORT)(t=this.subarray(e,n)).__proto__=Pn.prototype;else{var i=n-e;t=new Pn(i,void 0);for(var r=0;r<i;++r)t[r]=this[r+e]}return t},Pn.prototype.readUIntLE=function(e,n,t){e|=0,n|=0,t||ut(e,n,this.length);for(var a=this[e],i=1,r=0;++r<n&&(i*=256);)a+=this[e+r]*i;return a},Pn.prototype.readUIntBE=function(e,n,t){e|=0,n|=0,t||ut(e,n,this.length);for(var a=this[e+--n],i=1;n>0&&(i*=256);)a+=this[e+--n]*i;return a},Pn.prototype.readUInt8=function(e,n){return n||ut(e,1,this.length),this[e]},Pn.prototype.readUInt16LE=function(e,n){return n||ut(e,2,this.length),this[e]|this[e+1]<<8},Pn.prototype.readUInt16BE=function(e,n){return n||ut(e,2,this.length),this[e]<<8|this[e+1]},Pn.prototype.readUInt32LE=function(e,n){return n||ut(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},Pn.prototype.readUInt32BE=function(e,n){return n||ut(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},Pn.prototype.readIntLE=function(e,n,t){e|=0,n|=0,t||ut(e,n,this.length);for(var a=this[e],i=1,r=0;++r<n&&(i*=256);)a+=this[e+r]*i;return a>=(i*=128)&&(a-=Math.pow(2,8*n)),a},Pn.prototype.readIntBE=function(e,n,t){e|=0,n|=0,t||ut(e,n,this.length);for(var a=n,i=1,r=this[e+--a];a>0&&(i*=256);)r+=this[e+--a]*i;return r>=(i*=128)&&(r-=Math.pow(2,8*n)),r},Pn.prototype.readInt8=function(e,n){return n||ut(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},Pn.prototype.readInt16LE=function(e,n){n||ut(e,2,this.length);var t=this[e]|this[e+1]<<8;return 32768&t?4294901760|t:t},Pn.prototype.readInt16BE=function(e,n){n||ut(e,2,this.length);var t=this[e+1]|this[e]<<8;return 32768&t?4294901760|t:t},Pn.prototype.readInt32LE=function(e,n){return n||ut(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},Pn.prototype.readInt32BE=function(e,n){return n||ut(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},Pn.prototype.readFloatLE=function(e,n){return n||ut(e,4,this.length),Mn(this,e,!0,23,4)},Pn.prototype.readFloatBE=function(e,n){return n||ut(e,4,this.length),Mn(this,e,!1,23,4)},Pn.prototype.readDoubleLE=function(e,n){return n||ut(e,8,this.length),Mn(this,e,!0,52,8)},Pn.prototype.readDoubleBE=function(e,n){return n||ut(e,8,this.length),Mn(this,e,!1,52,8)},Pn.prototype.writeUIntLE=function(e,n,t,a){(e=+e,n|=0,t|=0,a)||st(this,e,n,t,Math.pow(2,8*t)-1,0);var i=1,r=0;for(this[n]=255&e;++r<t&&(i*=256);)this[n+r]=e/i&255;return n+t},Pn.prototype.writeUIntBE=function(e,n,t,a){(e=+e,n|=0,t|=0,a)||st(this,e,n,t,Math.pow(2,8*t)-1,0);var i=t-1,r=1;for(this[n+i]=255&e;--i>=0&&(r*=256);)this[n+i]=e/r&255;return n+t},Pn.prototype.writeUInt8=function(e,n,t){return e=+e,n|=0,t||st(this,e,n,1,255,0),Pn.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[n]=255&e,n+1},Pn.prototype.writeUInt16LE=function(e,n,t){return e=+e,n|=0,t||st(this,e,n,2,65535,0),Pn.TYPED_ARRAY_SUPPORT?(this[n]=255&e,this[n+1]=e>>>8):lt(this,e,n,!0),n+2},Pn.prototype.writeUInt16BE=function(e,n,t){return e=+e,n|=0,t||st(this,e,n,2,65535,0),Pn.TYPED_ARRAY_SUPPORT?(this[n]=e>>>8,this[n+1]=255&e):lt(this,e,n,!1),n+2},Pn.prototype.writeUInt32LE=function(e,n,t){return e=+e,n|=0,t||st(this,e,n,4,4294967295,0),Pn.TYPED_ARRAY_SUPPORT?(this[n+3]=e>>>24,this[n+2]=e>>>16,this[n+1]=e>>>8,this[n]=255&e):mt(this,e,n,!0),n+4},Pn.prototype.writeUInt32BE=function(e,n,t){return e=+e,n|=0,t||st(this,e,n,4,4294967295,0),Pn.TYPED_ARRAY_SUPPORT?(this[n]=e>>>24,this[n+1]=e>>>16,this[n+2]=e>>>8,this[n+3]=255&e):mt(this,e,n,!1),n+4},Pn.prototype.writeIntLE=function(e,n,t,a){if(e=+e,n|=0,!a){var i=Math.pow(2,8*t-1);st(this,e,n,t,i-1,-i)}var r=0,o=1,u=0;for(this[n]=255&e;++r<t&&(o*=256);)e<0&&0===u&&0!==this[n+r-1]&&(u=1),this[n+r]=(e/o>>0)-u&255;return n+t},Pn.prototype.writeIntBE=function(e,n,t,a){if(e=+e,n|=0,!a){var i=Math.pow(2,8*t-1);st(this,e,n,t,i-1,-i)}var r=t-1,o=1,u=0;for(this[n+r]=255&e;--r>=0&&(o*=256);)e<0&&0===u&&0!==this[n+r+1]&&(u=1),this[n+r]=(e/o>>0)-u&255;return n+t},Pn.prototype.writeInt8=function(e,n,t){return e=+e,n|=0,t||st(this,e,n,1,127,-128),Pn.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[n]=255&e,n+1},Pn.prototype.writeInt16LE=function(e,n,t){return e=+e,n|=0,t||st(this,e,n,2,32767,-32768),Pn.TYPED_ARRAY_SUPPORT?(this[n]=255&e,this[n+1]=e>>>8):lt(this,e,n,!0),n+2},Pn.prototype.writeInt16BE=function(e,n,t){return e=+e,n|=0,t||st(this,e,n,2,32767,-32768),Pn.TYPED_ARRAY_SUPPORT?(this[n]=e>>>8,this[n+1]=255&e):lt(this,e,n,!1),n+2},Pn.prototype.writeInt32LE=function(e,n,t){return e=+e,n|=0,t||st(this,e,n,4,2147483647,-2147483648),Pn.TYPED_ARRAY_SUPPORT?(this[n]=255&e,this[n+1]=e>>>8,this[n+2]=e>>>16,this[n+3]=e>>>24):mt(this,e,n,!0),n+4},Pn.prototype.writeInt32BE=function(e,n,t){return e=+e,n|=0,t||st(this,e,n,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),Pn.TYPED_ARRAY_SUPPORT?(this[n]=e>>>24,this[n+1]=e>>>16,this[n+2]=e>>>8,this[n+3]=255&e):mt(this,e,n,!1),n+4},Pn.prototype.writeFloatLE=function(e,n,t){return gt(this,e,n,!0,t)},Pn.prototype.writeFloatBE=function(e,n,t){return gt(this,e,n,!1,t)},Pn.prototype.writeDoubleLE=function(e,n,t){return ct(this,e,n,!0,t)},Pn.prototype.writeDoubleBE=function(e,n,t){return ct(this,e,n,!1,t)},Pn.prototype.copy=function(e,n,t,a){if(t||(t=0),a||0===a||(a=this.length),n>=e.length&&(n=e.length),n||(n=0),a>0&&a<t&&(a=t),a===t)return 0;if(0===e.length||0===this.length)return 0;if(n<0)throw new RangeError("targetStart out of bounds");if(t<0||t>=this.length)throw new RangeError("sourceStart out of bounds");if(a<0)throw new RangeError("sourceEnd out of bounds");a>this.length&&(a=this.length),e.length-n<a-t&&(a=e.length-n+t);var i,r=a-t;if(this===e&&t<n&&n<a)for(i=r-1;i>=0;--i)e[i+n]=this[i+t];else if(r<1e3||!Pn.TYPED_ARRAY_SUPPORT)for(i=0;i<r;++i)e[i+n]=this[i+t];else Uint8Array.prototype.set.call(e,this.subarray(t,t+r),n);return r},Pn.prototype.fill=function(e,n,t,a){if("string"==typeof e){if("string"==typeof n?(a=n,n=0,t=this.length):"string"==typeof t&&(a=t,t=this.length),1===e.length){var i=e.charCodeAt(0);i<256&&(e=i)}if(void 0!==a&&"string"!=typeof a)throw new TypeError("encoding must be a string");if("string"==typeof a&&!Pn.isEncoding(a))throw new TypeError("Unknown encoding: "+a)}else"number"==typeof e&&(e&=255);if(n<0||this.length<n||this.length<t)throw new RangeError("Out of range index");if(t<=n)return this;var r;if(n>>>=0,t=void 0===t?this.length:t>>>0,e||(e=0),"number"==typeof e)for(r=n;r<t;++r)this[r]=e;else{var o=qn(e)?e:ft(new Pn(e,a).toString()),u=o.length;for(r=0;r<t-n;++r)this[r+n]=o[r%u]}return this};var pt=/[^+\/0-9A-Za-z-_]/g;function vt(e){return e<16?"0"+e.toString(16):e.toString(16)}function ft(e,n){var t;n=n||1/0;for(var a=e.length,i=null,r=[],o=0;o<a;++o){if((t=e.charCodeAt(o))>55295&&t<57344){if(!i){if(t>56319){(n-=3)>-1&&r.push(239,191,189);continue}if(o+1===a){(n-=3)>-1&&r.push(239,191,189);continue}i=t;continue}if(t<56320){(n-=3)>-1&&r.push(239,191,189),i=t;continue}t=65536+(i-55296<<10|t-56320)}else i&&(n-=3)>-1&&r.push(239,191,189);if(i=null,t<128){if((n-=1)<0)break;r.push(t)}else if(t<2048){if((n-=2)<0)break;r.push(t>>6|192,63&t|128)}else if(t<65536){if((n-=3)<0)break;r.push(t>>12|224,t>>6&63|128,63&t|128)}else{if(!(t<1114112))throw new Error("Invalid code point");if((n-=4)<0)break;r.push(t>>18|240,t>>12&63|128,t>>6&63|128,63&t|128)}}return r}function ht(e){return function(e){var n,t,a,i,r,o;Fn||jn();var u=e.length;if(u%4>0)throw new Error("Invalid string. Length must be a multiple of 4");r="="===e[u-2]?2:"="===e[u-1]?1:0,o=new En(3*u/4-r),a=r>0?u-4:u;var s=0;for(n=0,t=0;n<a;n+=4,t+=3)i=xn[e.charCodeAt(n)]<<18|xn[e.charCodeAt(n+1)]<<12|xn[e.charCodeAt(n+2)]<<6|xn[e.charCodeAt(n+3)],o[s++]=i>>16&255,o[s++]=i>>8&255,o[s++]=255&i;return 2===r?(i=xn[e.charCodeAt(n)]<<2|xn[e.charCodeAt(n+1)]>>4,o[s++]=255&i):1===r&&(i=xn[e.charCodeAt(n)]<<10|xn[e.charCodeAt(n+1)]<<4|xn[e.charCodeAt(n+2)]>>2,o[s++]=i>>8&255,o[s++]=255&i),o}(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(pt,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function bt(e,n,t,a){for(var i=0;i<a&&!(i+t>=n.length||i>=e.length);++i)n[i+t]=e[i];return i}function yt(e){return null!=e&&(!!e._isBuffer||Vt(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&Vt(e.slice(0,0))}(e))}function Vt(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}var wt=Object.freeze({__proto__:null,Buffer:Pn,INSPECT_MAX_BYTES:50,SlowBuffer:function(e){return+e!=e&&(e=0),Pn.alloc(+e)},isBuffer:yt,kMaxLength:Bn}),At=Pn;function xt(e){if(e.__esModule)return e;var n=e.default;if("function"==typeof n){var t=function e(){return this instanceof e?Reflect.construct(n,arguments,this.constructor):n.apply(this,arguments)};t.prototype=n.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(e).forEach((function(n){var a=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,a.get?a:{enumerable:!0,get:function(){return e[n]}})})),t}var Et,Ft=xt(wt).Buffer;Et=function(){var e,n;if("function"!=typeof At)return!1;try{e=he(n="function"==typeof At.from?At.from([1,2,3,4]):new At([1,2,3,4]))&&1===n[0]&&2===n[1]&&3===n[2]&&4===n[3]}catch(n){e=!1}return e}()?Ft:function(){throw new Error("not implemented")};var jt=Et;var St=Re(jt.from)?function(e){if(!he(e))throw new TypeError(M("invalid argument. Must provide a Buffer. Value: `%s`.",e));return jt.from(e)}:function(e){if(!he(e))throw new TypeError(M("invalid argument. Must provide a Buffer. Value: `%s`.",e));return new jt(e)},Ot="function"==typeof Int8Array;var Mt="function"==typeof Int8Array?Int8Array:null;var kt,It="function"==typeof Int8Array?Int8Array:void 0;kt=function(){var e,n,t;if("function"!=typeof Mt)return!1;try{n=new Mt([1,3.14,-3.14,128]),t=n,e=(Ot&&t instanceof Int8Array||"[object Int8Array]"===X(t))&&1===n[0]&&3===n[1]&&-3===n[2]&&-128===n[3]}catch(n){e=!1}return e}()?It:function(){throw new Error("not implemented")};var Tt=kt,Bt="function"==typeof Uint8Array;var Ct="function"==typeof Uint8Array?Uint8Array:null;var Ut,Pt="function"==typeof Uint8Array?Uint8Array:void 0;Ut=function(){var e,n,t;if("function"!=typeof Ct)return!1;try{n=new Ct(n=[1,3.14,-3.14,256,257]),t=n,e=(Bt&&t instanceof Uint8Array||"[object Uint8Array]"===X(t))&&1===n[0]&&3===n[1]&&253===n[2]&&0===n[3]&&1===n[4]}catch(n){e=!1}return e}()?Pt:function(){throw new Error("not implemented")};var Dt=Ut,Rt="function"==typeof Uint8ClampedArray;var zt="function"==typeof Uint8ClampedArray?Uint8ClampedArray:null;var Nt,_t="function"==typeof Uint8ClampedArray?Uint8ClampedArray:void 0;Nt=function(){var e,n,t;if("function"!=typeof zt)return!1;try{n=new zt([-1,0,1,3.14,4.99,255,256]),t=n,e=(Rt&&t instanceof Uint8ClampedArray||"[object Uint8ClampedArray]"===X(t))&&0===n[0]&&0===n[1]&&1===n[2]&&3===n[3]&&5===n[4]&&255===n[5]&&255===n[6]}catch(n){e=!1}return e}()?_t:function(){throw new Error("not implemented")};var qt=Nt,Lt="function"==typeof Int16Array;var Yt="function"==typeof Int16Array?Int16Array:null;var Gt,Wt="function"==typeof Int16Array?Int16Array:void 0;Gt=function(){var e,n,t;if("function"!=typeof Yt)return!1;try{n=new Yt([1,3.14,-3.14,32768]),t=n,e=(Lt&&t instanceof Int16Array||"[object Int16Array]"===X(t))&&1===n[0]&&3===n[1]&&-3===n[2]&&-32768===n[3]}catch(n){e=!1}return e}()?Wt:function(){throw new Error("not implemented")};var Xt=Gt,Jt="function"==typeof Uint16Array;var Zt="function"==typeof Uint16Array?Uint16Array:null;var Ht,Kt="function"==typeof Uint16Array?Uint16Array:void 0;Ht=function(){var e,n,t;if("function"!=typeof Zt)return!1;try{n=new Zt(n=[1,3.14,-3.14,65536,65537]),t=n,e=(Jt&&t instanceof Uint16Array||"[object Uint16Array]"===X(t))&&1===n[0]&&3===n[1]&&65533===n[2]&&0===n[3]&&1===n[4]}catch(n){e=!1}return e}()?Kt:function(){throw new Error("not implemented")};var Qt=Ht,$t="function"==typeof Int32Array;var ea="function"==typeof Int32Array?Int32Array:null;var na,ta="function"==typeof Int32Array?Int32Array:void 0;na=function(){var e,n,t;if("function"!=typeof ea)return!1;try{n=new ea([1,3.14,-3.14,2147483648]),t=n,e=($t&&t instanceof Int32Array||"[object Int32Array]"===X(t))&&1===n[0]&&3===n[1]&&-3===n[2]&&-2147483648===n[3]}catch(n){e=!1}return e}()?ta:function(){throw new Error("not implemented")};var aa=na,ia="function"==typeof Uint32Array;var ra="function"==typeof Uint32Array?Uint32Array:null;var oa,ua="function"==typeof Uint32Array?Uint32Array:void 0;oa=function(){var e,n,t;if("function"!=typeof ra)return!1;try{n=new ra(n=[1,3.14,-3.14,4294967296,4294967297]),t=n,e=(ia&&t instanceof Uint32Array||"[object Uint32Array]"===X(t))&&1===n[0]&&3===n[1]&&4294967293===n[2]&&0===n[3]&&1===n[4]}catch(n){e=!1}return e}()?ua:function(){throw new Error("not implemented")};var sa=oa,la="function"==typeof Float32Array;var ma="function"==typeof Float32Array?Float32Array:null;var da,ga="function"==typeof Float32Array?Float32Array:void 0;da=function(){var e,n,t;if("function"!=typeof ma)return!1;try{n=new ma([1,3.14,-3.14,5e40]),t=n,e=(la&&t instanceof Float32Array||"[object Float32Array]"===X(t))&&1===n[0]&&3.140000104904175===n[1]&&-3.140000104904175===n[2]&&n[3]===re}catch(n){e=!1}return e}()?ga:function(){throw new Error("not implemented")};var ca=da,pa="function"==typeof Float64Array;var va="function"==typeof Float64Array?Float64Array:null;var fa,ha="function"==typeof Float64Array?Float64Array:void 0;fa=function(){var e,n,t;if("function"!=typeof va)return!1;try{n=new va([1,3.14,-3.14,NaN]),t=n,e=(pa&&t instanceof Float64Array||"[object Float64Array]"===X(t))&&1===n[0]&&3.14===n[1]&&-3.14===n[2]&&n[3]!=n[3]}catch(n){e=!1}return e}()?ha:function(){throw new Error("not implemented")};var ba=fa;function ya(e){return new Tt(e)}function Va(e){return new Dt(e)}function wa(e){return new qt(e)}function Aa(e){return new Xt(e)}function xa(e){return new Qt(e)}function Ea(e){return new aa(e)}function Fa(e){return new sa(e)}function ja(e){return new ca(e)}function Sa(e){return new ba(e)}var Oa={int8array:ya,uint8array:Va,uint8clampedarray:wa,int16array:Aa,uint16array:xa,int32array:Ea,uint32array:Fa,float32array:ja,float64array:Sa};function Ma(e,n,t,a,i){var r,o,u,s,l,m,d,g,c,p;if(i-=1,"object"!=typeof e||null===e)return e;if(he(e))return St(e);if(function(e){if("object"!=typeof e||null===e)return!1;if(e instanceof Error)return!0;for(;e;){if("[object Error]"===X(e))return!0;e=qe(e)}return!1}(e))return function(e){var n,t,a,i,r,o,u=[],s=[];for(r=new e.constructor(e.message),u.push(e),s.push(r),e.stack&&(r.stack=e.stack),e.code&&(r.code=e.code),e.errno&&(r.errno=e.errno),e.syscall&&(r.syscall=e.syscall),n=vn(e),o=0;o<n.length;o++)i=n[o],Y(t=wn(e,i),"value")&&(a=Q(e[i])?[]:{},t.value=Ma(e[i],a,u,s,-1)),D(r,i,t);return r}(e);if("date"===(u=De(e)))return new Date(+e);if("regexp"===u)return function(e){if(!z(e))throw new TypeError(M("invalid argument. Must provide a regular expression string. Value: `%s`.",e));return(e=/^\/((?:\\\/|[^\/])+)\/([imgy]*)$/.exec(e))?new RegExp(e[1],e[2]):null}(e.toString());if("set"===u)return new Set(e);if("map"===u)return new Map(e);if("string"===u||"boolean"===u||"number"===u)return e.valueOf();if(l=Oa[u])return l(e);if("array"!==u&&"object"!==u)return"function"==typeof Object.freeze?function(e){var n,t,a,i,r,o,u,s;for(n=[],i=[],u=Object.create(qe(e)),n.push(e),i.push(u),t=bn(e),s=0;s<t.length;s++)a=t[s],Y(r=wn(e,a),"value")&&(o=Q(e[a])?[]:{},r.value=Ma(e[a],o,n,i,-1)),D(u,a,r);return Object.isExtensible(e)||Object.preventExtensions(u),Object.isSealed(e)&&Object.seal(u),Object.isFrozen(e)&&Object.freeze(u),u}(e):{};if(o=vn(e),i>0)for(r=u,p=0;p<o.length;p++)g=e[m=o[p]],u=De(g),"object"!=typeof g||null===g||"array"!==u&&"object"!==u||he(g)?"object"===r?(Y(s=wn(e,m),"value")&&(s.value=Ma(g)),D(n,m,s)):n[m]=Ma(g):-1===(c=Ze(t,g))?(d=Q(g)?new Array(g.length):{},t.push(g),a.push(d),"array"===r?n[m]=Ma(g,d,t,a,i):(Y(s=wn(e,m),"value")&&(s.value=Ma(g,d,t,a,i)),D(n,m,s))):n[m]=a[c];else if("array"===u)for(p=0;p<o.length;p++)n[m=o[p]]=e[m];else for(p=0;p<o.length;p++)m=o[p],s=wn(e,m),D(n,m,s);return Object.isExtensible(e)||Object.preventExtensions(n),Object.isSealed(e)&&Object.seal(n),Object.isFrozen(e)&&Object.freeze(n),n}var ka={10:"invalid operation. Cannot reset a REPL which has already closed.",11:"invalid operation. Cannot clear a REPL which has already closed.",12:"invalid operation. Cannot clear the line of a REPL which has already closed.",13:"invalid operation. Cannot clear the command buffer of a REPL which has already closed.",14:"invalid argument. Provided command either does not contain an `await` expression or contains a top-level `return` which is not allowed.",15:"invalid argument. Must provide a program AST node.",16:"invalid invocation. Insufficient arguments. Must provide a REPL instance.",17:"invalid operation. No presentation to reload. Use the `load()` method to load a presentation.",18:"invalid operation. No presentation file to watch. Use the `load()` method to load a presentation.",19:'unexpected error. Encountered a "rename" event for the source presentation file. No longer watching source presentation file for changes.',20:"invalid argument. Must provide a username or, to get a list of repositories an authenticated user is watching, an access token.",21:"unexpected error. Unable to resolve package directory as unable to find a `package.json` in a parent directory.",22:"invalid argument. Source code does not contain JSDoc comment with function options.",23:"unexpected error. Unable to resolve root project directory.",24:"invalid argument. An iterator must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.",25:"invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.",26:"invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.",27:"invalid argument. Array-like object and typed array arguments must have a length which is a multiple of two. Length: `%u`.",28:"invalid argument. ArrayBuffer byte length must be a multiple of `%u`. Byte length: `%u`.",29:"invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.",30:"invalid argument. Fourth argument must be a nonnegative integer. Value: `%s`.",31:"invalid argument. Fifth argument must be a function. Value: `%s`.",32:"invalid argument. Fourth argument must be a function. Value: `%s`.",33:"invalid argument. Second argument must be either an integer (starting index) or a callback function. Value: `%s`.",34:"invalid argument. Third argument must be either an integer (ending index) or a callback function. Value: `%s`.",35:"invalid argument. Second argument must be either an integer (starting view index) or a callback function. Value: `%s`.",36:"invalid argument. Third argument must be either an integer (ending view index) or a callback function. Value: `%s`.",37:"invalid argument. Second argument must be a recognized data type. Value: `%s`.",38:"invalid argument. First argument must be array-like. Value: `%s`.",39:"invalid argument. Second argument must be a string. Value: `%s`.",40:"invalid argument. Must provide either a Date object, a JavaScript timestamp (i.e., a nonnegative integer), or a date string. Value: `%s`.",41:"invalid option. Unrecognized rounding mode. Option: `%s`.",42:"invalid argument. Third argument must be either a nonnegative integer or an options object. Value: `%s`.",43:"invalid argument. Fourth argument must be an object. Value: `%s`.",44:"invalid argument. First argument must an iterator protocol-compliant object. Value: `%s`.",45:"invalid argument. Second argument must be a positive integer. Value: `%s`.",46:"invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.",47:"invalid argument. Must provide an object. Value: `%s`.",48:"invalid argument. Object property values must be functions. Key: `%s`. Value: `%s`.",49:"invalid argument. First argument must be a number. Value: `%s`.",50:"invalid option. Second `%s` parameter option must be a positive integer. Option: `%s`.",51:"invalid argument. First argument must be an array. Value: `%s`.",52:"invalid argument. First argument must be an array of length `%u`. Value: `%s`.",53:"invalid argument. First argument must be an array of length %u. Value: `%s`.",54:"unexpected error. Scaling weight vector by nonpositive value, likely due to too large value of eta * lambda. Value: `%f`.",55:"invalid argument. Second argument must be a boolean. Value: `%s`.",56:"invalid argument. Must provide either a valid data source, options argument, or both. Value: `%s`.",57:"invalid option. `%s` option must be an array-like object, typed-array-like, a Buffer, or an ndarray. Option: `%s`.",58:"invalid option. Data source must be an array-like object, typed-array-like, a Buffer, or an ndarray. Value: `%s`.",59:"invalid option. `%s` option must be a recognized casting mode. Option: `%s`.",60:"invalid argument. Input string must have a length equal to %u. Value: `%s`.",61:"invalid assignment. `%s` must be a boolean. Value: `%s`.",62:"invalid assignment. `%s` must be a string. Value: `%s`.",63:'invalid assignment. `%s` must be one of the following: "%s". Value: `%s`.',64:"invalid assignment. `%s` must be a positive number. Value: `%s`.",65:"invalid assignment. `%s` must be either an array of strings or an empty array. Value: `%s`.",66:"invalid assignment. `%s` must be a number or number array. Value: `%s`.",67:"invalid assignment. A `%s` must be a number on the interval: [0, 1]. Value: `%f`.",68:"invalid assignment. `%s` must be a string or a string array. Value: `%s`",69:'invalid assignment. Unsupported/unrecognized line style. Must be one of the following: "%s". Value: `%s`.',70:"invalid argument. Must provide a Uint32Array. Value: `%s`.",71:"invalid argument. First argument must be a positive number. Value: `%s`.",72:"invalid argument. Second argument must be a positive number. Value: `%s`.",73:"invalid argument. Second argument must be a probability. Value: `%s`.",74:"invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%s`.",75:"invalid option. `%s` option must have a `MIN` property specifying the minimum possible pseudorandom integer value.",76:"invalid option. `%s` option must have a `MAX` property specifying the maximum possible pseudorandom integer value.",77:"invalid argument. First argument must be an integer and not NaN. Value: `%s`.",78:"invalid argument. Second argument must be an integer and not NaN. Value: `%s`.",79:"invalid argument. Minimum support must be less than or equal to maximum support. Value: `[%d,%d]`.",80:"invalid argument. First argument must be either a string containing presentation text or an options object specifying a presentation file to load. Value: `%s`.",81:"invalid argument. Second argument must be an options object. Value: `%s`.",82:"invalid argument. Invalid presentation identifier. Must be either a string or nonnegative integer. Value: `%s`.",83:"invalid argument. Workspace name already exists. Value: `%s`.",84:"invalid argument. Must provide a string, regular expression, nonnegative integer, or an array of nonnegative integers. Value: `%s`.",85:"invalid argument. Unrecognized tutorial name. Value: `%s`.",86:"invalid argument. Documentation argument must be a string. Value: `%s`.",87:"invalid option. `%s` option must be a regular expression. Option: `%s`.",88:"internal error. Unrecognized pattern type: `%s`.",89:"invalid option. `%s` option must be a readable stream. Option: `%s`.",90:"invalid argument. Denominator degrees of freedom must be a positive number. Value: `%s`.",91:"invalid argument. Scale parameter must be a number. Value: `%s`.",92:"invalid argument. Mean parameter `%s` must be a probability. Value: `%s`.",93:"invalid argument. Population size must be a nonnegative integer. Value: `%s`.",94:"invalid argument. Subpopulation size must be a nonnegative integer. Value: `%s`.",95:"invalid argument. Number of draws must be a nonnegative integer. Value: `%s`.",96:"invalid assignment. Must be a nonnegative integer. Value: `%s`.",97:"invalid assignment. Must be larger than or equal to %u. Value: `%u`.",98:"invalid assignment. Must be less than or equal to %u. Value: `%u`.",99:"invalid argument. Number of trials until experiment is stopped must be a positive number. Value: `%s`.","00":"not implemented","01":"invalid invocation. `this` context must be a constructor.","02":"invalid invocation. `this` is not a complex number array.","03":"invalid arguments. Target array lacks sufficient storage to accommodate source values.","04":"invalid arguments. Creating a generic array from an ArrayBuffer is not supported.","05":"invalid arguments. Must provide a length, typed array, array-like object, or an iterable.","06":"invalid arguments. Generated array exceeds maximum array length.","07":'invalid arguments. If either of the first two arguments are complex numbers, the output array must be a complex number array or a "generic" array-like object.',"08":'invalid arguments. If either of the first two arguments are complex numbers, the output array data type must be a complex number data type or "generic".',"09":"not supported. The current environment does not support SharedArrayBuffers, and, unfortunately, SharedArrayBuffers cannot be polyfilled. For shared memory applications, upgrade your runtime environment to one which supports SharedArrayBuffers.","0A":"insufficient arguments. Must provide a search value.","0B":"invalid argument. Attempted to add duplicate listener.","0C":"exception","0D":"unexpected error. Benchmark failed.","0E":"unexpected error. Invalid benchmark.","0F":"unexpected error.","0G":"invalid invocation. Constructor must be called with the `new` keyword.","0H":"unexpected error. Max retries exceeded. Too many open files.","0I":"insufficient arguments. Must provide two or more iterators.","0J":"insufficient arguments. Must provide both an iterator and a static value.","0K":"invalid invocation. `this` is not a fluent interface iterator.","0L":"insufficient arguments. Must provide a hash function.","0M":"invalid argument. Iterator arguments must be iterator protocol-compliant objects.","0N":"insufficient arguments. Must provide at least one iterator function.","0O":"invalid argument. Providing a number is not supported.","0P":"invalid argument. Providing a complex number is not supported.","0Q":"invalid argument. Providing an ndarray is not supported.","0R":"invalid argument. Providing an array-like object is not supported.","0S":"invalid argument. If the first argument is an ndarray, the second argument must be an ndarray.","0T":"invalid argument. Output array must have the same number of elements (i.e., length) as the input array.","0U":"invalid argument. If the first argument is an array-like object, the second argument must be an array-like object.","0V":"invalid argument. Providing a number is not supported. Consider providing a zero-dimensional ndarray containing the numeric value.","0W":"invalid argument. Providing a complex number is not supported. Consider providing a zero-dimensional ndarray containing the complex number value.","0X":"invalid arguments. Must provide either a data source, array shape, or both.","0Y":"invalid arguments. Array shape is incompatible with provided data source. Number of data source elements does not match array shape.","0Z":"invalid argument. Cannot broadcast an array to a shape having fewer dimensions. Arrays can only be broadcasted to shapes having the same or more dimensions.","0a":"invalid argument. First argument must contain at least one element.","0b":"invalid arguments. The length of the first argument is incompatible with the second and third arguments.","0c":"invalid argument. Must provide an ndarray having two or more dimensions.","0d":"invalid arguments. Arrays must have the same shape.","0e":"invalid invocation. Cannot write to a read-only array.","0f":"invalid argument. Fourth argument length must be equal to 1 when creating a zero-dimensional ndarray.","0g":"invalid arguments. The input buffer is incompatible with the specified meta data. Ensure that the offset is valid with regard to the strides array and that the buffer has enough elements to satisfy the desired array shape.","0h":"invalid arguments. Interface must accept at least one input and/or output ndarray. Based on the provided arguments, `nin+nout` equals `0`.","0i":"invalid arguments. Fourth argument does not equal the number of input and output ndarrays.","0j":"invalid argument. Unexpected number of types. A type must be specified for each input and output ndarray for each provided ndarray function.","0k":"invalid argument. The third argument must have the same number of elements as the first argument.","0l":"invalid invocation. Insufficient arguments.","0m":"invalid invocation. Too many arguments.","0n":"invalid arguments. Unable to resolve an ndarray function supporting the provided array argument data types.","0o":"invalid operation. Unable to load Electron. Ensure Electron is installed and try again.","0p":"invalid operation. A browser environment has no support for changing the current working directory.","0q":"invalid operation. The environment does not support reading from `stdin`.","0r":"unexpected error. PRNG returned NaN.","0s":"invalid argument. Third argument must be less than or equal to the first argument.","0t":"invalid argument. Second argument must be less than or equal to the first argument.","0u":"invalid operation. Cannot delete the `base` workspace.","0v":"invalid invocation. Must provide either a string containing presentation text or an options object specifying a presentation file to load.","0w":"invalid argument. When not provided presentation text, an options argument must specify a presentation file to load.","0x":"invalid invocation. Not currently in a presentation workspace. Must provide either a string or nonnegative integer which corresponds to the identifier of the presentation to be stopped.","0y":"unexpected error. Command execution terminated.","0z":"invalid operation. Cannot load a file into a REPL which has already closed.","1A":"invalid arguments. First and second arguments must be arrays having the same length.","1B":"invalid arguments. Subpopulation size must be less than or equal to population size.","1C":"invalid arguments. Number of draws must be less than or equal to population size.","1D":"invalid argument. First argument must contain at least one element greater than zero (i.e., the total number number of observations must be greater than zero).","1E":"invalid arguments. First and second arguments must have the same length.","1F":"invalid arguments. First and second arguments must be arrays having the same length.","1G":"invalid arguments. First and second argument must have the same length.","1H":"invalid arguments. Not enough observations. First and second arguments must contain at least four observations.","1I":"invalid arguments. The first and second arguments must have the same length.","1J":"`x` or `x - y` cannot be zero for all elements.","1K":"invalid arguments. Strided array parameters are incompatible with the provided array-like object. Linear index exceeds array bounds.","1L":"invalid arguments. Unable to resolve a strided array function supporting the provided array argument data types.","1M":"invalid arguments. Interface must accept at least one strided input and/or output array. Based on the provided arguments, `nin+nout` equals `0`.","1N":"invalid argument. Unexpected number of types. A type must be specified for each strided input and output array for each provided strided array function.","1O":"invalid argument. Fourth argument is incompatible with the number of strided input and output arrays.","1P":"invalid argument. Input array offset must be a nonnegative integer.","1Q":"invalid argument. Output array offset must be a nonnegative integer.","1R":"invalid argument. Input array must be an array-like object.","1S":"invalid argument. Output array must be an array-like object.","1T":"invalid argument. Input array has insufficient elements based on the associated stride and the number of indexed elements.","1U":"invalid argument. Output array has insufficient elements based on the associated stride and the number of indexed elements.","1V":"insufficient arguments. Must provide either an array of code points or one or more code points as separate arguments.","1W":"invalid argument. Third argument must not be an empty string.","1X":"invalid argument. Pad string must not be an empty string.","1Y":"insufficient arguments. Must provide multiple functions to compose.","1Z":"insufficient arguments. Must provide multiple functions to execute sequentially.","1a":"invalid arguments. First and last arguments must be the same length.","1b":"insufficient arguments. Must provide at least two objects.","1c":"invalid invocation. `this` is not a compact adjacency matrix.","1d":"invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.","1e":"invalid argument. The list does not contain the provided list node.","1f":"unexpected error. Unable to resolve global object.","1g":"invalid argument. The output ndarray must be writable. Cannot write to a read-only ndarray.","1h":"invalid arguments. Input and output arrays must have the same length.","1i":"invalid arguments. Input and output arrays must have the same number of elements (i.e., length).","1j":"invalid arguments. Input ndarrays must be broadcast compatible.","1k":"invalid arguments. Input arrays must have the same number of elements (i.e., length).","1l":"insufficient arguments. Must provide both a target object and one or more source objects.","1m":"invalid invocation. `this` is not host tuple.","1n":"invalid invocation. `this` is not the host tuple factory.","1o":"not implemented. Please post an issue on the @stdlib/stdlib issue tracker if you would like this to be implemented.","1p":"invalid argument. Second argument must have a length equal to the size of the outermost input array dimension.","1q":"evaluation error. Did not receive timing results.","1r":"evaluation error. Unable to retrieve evaluation results. Ensure that the provided snippet does not return prematurely.","1s":"invalid argument. Must provide a zipped array.","1t":"invalid argument. Array must only contain arrays.","1u":"invalid argument. Indices must be specified as an array.","1v":"invalid argument. All indices must be integers.","1w":"invalid argument. Must provide valid indices (i.e., an index must be on the interval [0, len], where len is the tuple length).","1x":"insufficient arguments. Must provide at least one array.","1y":"invalid argument. Must provide a username or, to get who an authenticated user is following, an access token.","1z":"invalid argument. Must provide a username or, to get a list of repositories an authenticated user has starred, an access token.","2A":"invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.","2B":"invalid argument. First argument must be an ArrayBuffer. Value: `%s`.","2C":"invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.","2D":"invalid argument. Byte offset must be a multiple of `%u`. Value: `%u`.","2E":"invalid arguments. ArrayBuffer view byte length must be a multiple of %u. View byte length: `%u`.","2F":"invalid argument. Length must be a nonnegative integer. Value: `%s`.","2G":"invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.","2H":"invalid argument. Second argument must be a function. Value: `%s`.","2I":"invalid argument. First argument must have a length which is a multiple of two. Length: `%u`.","2J":"invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.","2K":"invalid argument. Must provide a nonnegative integer. Value: `%s`.","2L":"invalid argument. Index argument must be a nonnegative integer. Value: `%s`.","2M":"invalid argument. Index argument is out-of-bounds. Value: `%u`.","2N":"invalid argument. First argument must be either a complex number, an array-like object, or a complex number array. Value: `%s`.","2O":"invalid argument. First argument must be an array-like object. Value: `%s`.","2P":"invalid argument. Second argument must be a recognized array data type. Value: `%s`.","2Q":"invalid argument. Second argument must have a recognized/supported data type. Type: `%s`. Value: `%s`.","2R":"invalid argument. Unable to parse %s date.","2S":"invalid argument. Numeric %s date must be either a Unix or JavaScript timestamp.","2T":"invalid argument. %s date must either be a date string, Date object, Unix timestamp, or JavaScript timestamp.","2U":"invalid argument. Length must be a positive integer. Value: `%s`.","2V":"invalid argument. Options argument must be an object. Value: `%s`.","2W":"invalid option. `%s` option must be a string. Option: `%s`.","2X":'invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"2Y":"invalid argument. Must provide a recognized data type. Value: `%s`.","2Z":"invalid argument. Environment lacks Symbol.iterator support. Must provide a length, typed array, or array-like object. Value: `%s`.","2a":"invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.","2b":"invalid argument. Callback argument must be a function. Value: `%s`.","2c":"invalid argument. Iterator argument must be an iterator protocol-compliant object. Value: `%s`.","2d":"invalid argument. First argument must be a nonnegative integer. Value: `%s`.","2e":"invalid argument. Third argument must be a recognized data type. Value: `%s`.","2f":"invalid argument. First argument must be either an array, typed array, or complex typed array. Value: `%s`.","2g":"invalid argument. Start must be numeric. Value: `%s`.","2h":"invalid argument. Stop must be numeric. Value: `%s`.","2i":"invalid argument. Increment must be numeric. Value: `%s`.","2j":"invalid argument. First argument must be either a real or complex number. Value: `%s`.","2k":"invalid argument. Second argument must be either a real or complex number. Value: `%s`.","2l":"invalid argument. Third argument must be an array-like object. Value: `%s`.","2m":"invalid argument. Third argument must be a nonnegative integer. Value: `%s`.","2n":'invalid option. `%s` option must be a real or complex floating-point data type or "generic". Option: `%s`.',"2o":"invalid option. `%s` option must be a boolean. Option: `%s`.","2p":"invalid argument. Exponent of start value must be numeric. Value: `%s`.","2q":"invalid argument. Exponent of stop value must be numeric. Value: `%s`.","2r":"invalid argument. First argument must be either an array length or an array-like object. Value: `%s`.","2s":"invalid argument. Must provide a typed array or ArrayBuffer. Value: `%s`.","2t":"invalid option. `%s` option must be a nonnegative integer. Option: `%s`.","2u":"invalid argument. Must provide an array-like object. Value: `%s`.","2v":"invalid option. `%s` option must be either `1` or `-1`. Option: `%s`.","2w":"invalid argument. Second argument must be either a function or an options object. Value: `%s`.","2x":"invalid argument. Must provide a typed array. Value: `%s`.","2y":"invalid argument. Second argument must be an array-like object. Value: `%s`.","2z":"invalid argument. Third argument must be an integer. Value: `%s`.","3A":"invalid argument. Key path must be a string or a key array. Value: `%s`.","3B":"invalid argument. Must provide a string. Value: `%s`.","3C":"invalid argument. Must provide a valid position (i.e., a nonnegative integer). Value: `%s`.","3D":"invalid argument. Must provide a valid position (i.e., within string bounds). Value: `%u`.","3E":"invalid argument. Second argument must be callable. Value: `%s`.","3F":"invalid argument. First argument must be a string. Value: `%s`.","3G":'invalid argument. Fourth argument must be one of the following: "%s". Value: `%s`.',"3H":'invalid argument. Fifth argument must be one of the following: "%s". Value: `%s`.',"3I":"invalid argument. Second argument must be either an object (except null) or a function. Value: `%s`.","3J":"invalid argument. Must provide a function. Value: `%s`.","3K":"invalid argument. Must provide either an options object or a callback function. Value: `%s`.","3L":"invalid argument. First argument must be an object. Value: `%s`.","3M":"invalid option. `%s` option must be a writable stream. Option: `%s`.","3N":"invalid argument. Third argument must be a function. Value: `%s`.","3O":"invalid option. `%s` option must be either a positive integer or `null`. Option: `%s`.","3P":"invalid option. `%s` option must be a positive integer. Option: `%s`.","3Q":"invalid argument. First argument must be a 1-dimensional ndarray containing double-precision floating-point numbers (i.e., an ndarray whose underlying data buffer is a Float64Array). Value: `%s`.","3R":"invalid argument. Second argument must be a 1-dimensional ndarray containing double-precision floating-point numbers (i.e., an ndarray whose underlying data buffer is a Float64Array). Value: `%s`.","3S":"invalid argument. Arrays must be the same length. First argument length: `%u`. Second argument length: `%u`.","3T":"invalid argument. First argument must be either an array-like object or a one-dimensional ndarray. Value: `%s`.","3U":"invalid argument. Second argument must be either an array-like object or a one-dimensional ndarray. Value: `%s`.","3V":"invalid argument. First argument must be a 1-dimensional ndarray containing single-precision floating-point numbers (i.e., an ndarray whose underlying data buffer is a Float32Array). Value: `%s`.","3W":"invalid argument. Second argument must be a 1-dimensional ndarray containing single-precision floating-point numbers (i.e., an ndarray whose underlying data buffer is a Float32Array). Value: `%s`.","3X":"invalid argument. Second argument must be a nonnegative integer. Value: `%s`.","3Y":"invalid argument. Second argument must not exceed the number of bytes in the input ArrayBuffer. Value: `%s`.","3Z":"invalid argument. Last argument must be a nonnegative integer. Value: `%s`.","3a":"invalid argument. Last argument must not exceed the number of bytes in the input ArrayBuffer. Value: `%s`.","3b":"invalid argument. Must provide a Buffer. Value: `%s`.","3c":"invalid argument. First argument must be a function. Value: `%s`.","3d":"invalid argument. Third argument must be a constructor function. Value: `%s`.","3e":"invalid argument. Real component must be a number. Value: `%s`.","3f":"invalid argument. Imaginary component must be a number. Value: `%s`.","3g":'invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"3h":"invalid argument. Unsupported/unrecognized dataset name. Value: `%s`.","3i":"invalid option. Unrecognized `%s`. Option: `[%s]`.","3j":"invalid option. `%s` option must be a string or an array of strings. Option: `%s`.","3k":"invalid option. `%s` option must be a positive integer or an array of positive integers. Option: `%s`.","3l":"invalid option. `%s` option must be a positive integer array of length two. Option: `%s`.","3m":"invalid option. `%s` option cannot be less than 1790. Option: `%s`.","3n":"invalid option. `%s` option cannot be greater than 5000. Option: `%s`.","3o":"invalid argument. Must provide an error object. Value: `%s`.","3p":"invalid argument. First argument must be a valid file descriptor (i.e., nonnegative integer). Value: `%s`.","3q":"invalid argument. Last argument must be a function. Value: `%s`.","3r":"invalid argument. Must provide a valid file descriptor (i.e., a nonnegative integer). Value: `%s`.","3s":"invalid argument. First argument must be an array of strings. Value: `%s`.","3t":"invalid argument. Options argument must be either a string or an object. Value: `%s`.","3u":"invalid argument. Predicate function must be a function. Value: `%s`.","3v":"invalid argument. First argument must be an iterator. Value: `%s`.","3w":"invalid argument. Must provide an iterator. Value: `%s`.","3x":"invalid argument. Must provide an iterator protocol-compliant object. Argument: `%u`. Value: `%s`.","3y":"invalid argument. Must provide an iterator protocol-compliant object. Value: `%s`.","3z":"invalid argument. Unable to parse date string. Value: `%s`.","4A":"invalid argument. Second argument must be a number. Value: `%s`.","4B":"invalid argument. Third argument must be a number. Value: `%s`.","4C":"invalid argument. Hash function argument must be a function. Value: `%s`.","4D":"invalid option. `%s` option must be a positive number. Option: `%s`.","4E":"invalid argument. Third argument must be either a nonnegative integer or an object. Value: `%s`.","4F":"invalid arguments. All arguments must be functions. Value: `%s`.","4G":"invalid argument. Each iterator function, except the last iterator function, within an iterator pipeline must return an iterator. Value: `%s`.","4H":"invalid argument. Must provide an an iterator. Value: `%s`.","4I":"invalid return value. Callback function must return an integer. Value: `%s`.","4J":"invalid argument. Fourth argument must be a boolean. Value: `%s`.","4K":"invalid return value. Callback function must return a positive integer. Value: `%s`.","4L":"invalid argument. Fifth argument must be a callback function. Value: `%s`.","4M":"invalid argument. Third argument must be either an integer (starting index) or a callback function. Value: `%s`.","4N":"invalid argument. Fourth argument must be either an integer (ending index) or a callback function. Value: `%s`.","4O":"invalid argument. Unrecognized/unsupported scale function. Value: `%s`.","4P":"invalid argument. Must provide an iterator protocol-compliant object or a number. Argument: `%u`. Value: `%s`.","4Q":"invalid argument. First argument must be a finite number. Value: `%s`.","4R":"invalid option. `%s` option must be a positive finite number. Option: `%s`.","4S":'invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"4T":"invalid option. `%s` option must be less than or equal to 79. Option: `%u`.","4U":"invalid option. `%s` option must be less than or equal to 77. Option: `%u`.","4V":"invalid argument. Must provide an argument having a supported data type. Value: `%s`.","4W":"invalid option. Unsupported policy for determining an output array data type. Option: `%s`.","4X":"invalid option. `%s` option must be a recognized/supported data type. Option: `%s`.","4Y":"invalid option. `%s` option must be a recognized/supported output array data type policy. Option: `%s`.","4Z":"invalid argument. Resolution table must be an object. Value: `%s`.","4a":"invalid argument. Resolution table `%s` field value must be either a function or null. Value: `%s`.","4b":"invalid argument. First argument must be a positive integer. Value: `%s`.","4c":"invalid argument. First argument must be a one-dimensional ndarray. Value: `%s`.","4d":"invalid argument. Second argument must be either +1 or -1. Value: `%s`.","4e":"invalid argument. First argument must be a one-dimensional ndarray of length %u. Actual length: `%u`.","4f":"invalid argument. First argument must be an ndarray. Value: `%s`.","4g":"invalid argument. First argument must be an ndarray whose last dimension is of size `%u`. Actual size: `%u`.","4h":'invalid argument. Second argument is incompatible with model loss function. Probability predictions are only supported when the loss function is one of the following: "%s". Model loss function: `%s`.',"4i":'invalid argument. Second argument must be a string value equal to either "label", "probability", or "linear". Value: `%s`.',"4j":"invalid argument. Attempting to scale a weight vector by a nonpositive value. This is likely due to too large a value of `eta*lambda`. Value: `%f`.","4k":"invalid option. `%s` option must be a nonnegative number. Option: `%s`.","4l":"invalid option. `%s` option must be an array-like object. Option: `%s`.","4m":'invalid option. First `%s` option must be one of the following: "%s". Option: `%s`.',"4n":"invalid option. Second `%s` option must be a positive number. Option: `%s`.","4o":"invalid option. Third `%s` option must be a number. Option: `%s`.","4p":"invalid argument. Argument specifying number of dimensions must be a positive integer. Value: `%s`.","4q":"invalid argument. First argument must either be a positive integer specifying the number of clusters or a matrix containing initial centroids. Value: `%s`.","4r":"invalid option. First `%s` parameter option must be greater than or equal to the number of clusters. Options: `%f`.","4s":"invalid argument. Must provide a 1-dimensional ndarray. Value: `%s`.","4t":"invalid argument. Vector length must match centroid dimensions. Expected: `%u``. Actual: `%u``.","4u":"invalid argument. Output argument must be a 1-dimensional ndarray. Value: `%s`.","4v":"invalid argument. Must provide a 2-dimensional ndarray. Value: `%s`.","4w":"invalid argument. Number of matrix columns must match centroid dimensions. Expected: `%u``. Actual: `%u`.","4x":"invalid argument. Output vector length must match the number of data points. Expected: `%u`. Actual: `%u`.","4y":'invalid option. `%s` option method must be one of the following: "%s". Option: `%s`.',"4z":"invalid option. First `%s` parameter option must be a positive integer. Option: `%s`.","5A":"invalid option. `%s` option must be a recognized data type. Option: `%s`.","5B":"invalid option. Data type cast is not allowed. Casting mode: `%s`. From: `%s`. To: `%s`.","5C":"invalid option. `%s` option must be a recognized order. Option: `%s`.","5D":"invalid option. `%s` option must be an array-like object containing nonnegative integers. Option: `%s`.","5E":"invalid argument. Linear index must not exceed array dimensions. Number of array elements: `%u`. Value: `%d`.","5F":"invalid argument. Input array cannot be broadcast to the specified shape, as the specified shape has a dimension whose size is less than the size of the corresponding dimension in the input array. Array shape: (%s). Desired shape: (%s). Dimension: %u.","5G":"invalid argument. Input array and the specified shape are broadcast incompatible. Array shape: (%s). Desired shape: (%s). Dimension: %u.","5H":"invalid argument. Specified axis is out-of-bounds. Must be on the interval: [-%u-1, %u]. Value: `%d`.","5I":"invalid argument. Index must be on the interval: [0, %f]. Value: `%f`.","5J":"invalid argument. Subscripts must not exceed array dimensions. Subscript: `%u`. Value: `%d`.","5K":"invalid argument. First argument must be a recognized data type. Value: `%s`.","5L":"invalid argument. First argument must have a recognized data type. Value: `%s`.","5M":"invalid arguments. Number of indices must match the number of dimensions. ndims: `%u`. nargs: `%u`.","5N":"invalid argument. Indices must be integer valued. Argument: `%u`. Value: `%s`.","5O":"invalid argument. Index must be an integer. Value: `%s`.","5P":"invalid argument. First argument must be a supported ndarray data type. Value: `%s`.","5Q":"invalid argument. Second argument must be an array-like object, typed-array-like, or a Buffer. Value: `%s`.","5R":"invalid argument. Second argument `get` and `set` properties must be functions. Value: `%s`.","5S":"invalid argument. Third argument must be an array-like object containing nonnegative integers. Value: `%s`.","5T":"invalid argument. Number of dimensions must not exceed %u due to stack limits. Value: `%u`.","5U":"invalid argument. Fourth argument must be an array-like object containing integers. Value: `%s`.","5V":"invalid argument. Fourth argument length must match the number of dimensions. Expected number of dimensions: `%u`. Strides length: `%u`.","5W":"invalid argument. Fourth argument must contain a single element equal to `0`. Value: `%d`.","5X":"invalid argument. Fifth argument must be a nonnegative integer. Value: `%s`.","5Y":"invalid argument. Sixth argument must be a supported order. Value: `%s`.","5Z":"invalid argument. Indices must be integer valued. Argument: `%i`. Value: `%u`.","5a":"invalid option. `%s` option must be a recognized mode. Option: `%s`.","5b":"invalid option. `%s` option must be an array containing recognized modes. Option: `%s`.","5c":"invalid option. Each submode must be a recognized mode. Option: `%s`.","5d":"invalid argument. First argument must be either a function or an array of functions. Value: `%s`.","5e":"invalid argument. Third argument must be an array-like object or null. Value: `%s`.","5f":"invalid argument. Fourth argument must be a positive integer. Value: `%s`.","5g":"invalid argument. Sixth argument must be a nonnegative integer. Value: `%s`.","5h":"invalid argument. Input array must be an ndarray-like object. Value: `%s`.","5i":"invalid argument. Output array must be an ndarray-like object. Value: `%s`.","5j":"invalid argument. Output argument must be either an array, typed array, or object. Value: `%s`.","5k":"invalid argument. Shape argument must be an array-like object containing nonnegative integers. Value: `%s`.","5l":"invalid argument. Linear index must be integer valued. Value: `%s`.","5m":"invalid option. `%s` option must be a supported/recognized mode. Option: `%s`.","5n":"invalid option. `%s` option must be a supported/recognized order. Option: `%s`.","5o":"invalid argument. First argument must be an array-like object containing nonnegative integers. Value: `%s`.","5p":"invalid argument. Number of provided subscripts must match the number of dimensions. ndims: `%u`. Number of subscripts: `%u`.","5q":"invalid argument. Subscripts must be integer valued. Argument: `%u`. Value: `%s`.","5r":"invalid option. `%s` option cannot be an empty array.","5s":"invalid argument. First argument must be either a nonnegative integer or an array of nonnegative integers. Value: `%s`.","5t":"invalid argument. First argument must be an ndarray-like object. Value: `%s`.","5u":"invalid option. `%s` option must either be a nonnegative integer or an array of nonnegative integers. Option: `%s`.","5v":"invalid option. `%s` option must be either a Buffer or a string. Option: `%s`.","5w":"invalid argument. Request listener must be a function. Value: `%s`.","5x":"invalid argument. Third argument must be a positive integer. Value: `%s`.","5y":"invalid argument. Number of topics must be a positive integer. Value: `%s`.","5z":"invalid argument. First argument must be a nonnegative integer which is less than the total number of topics. Value: `%s`.","6A":"invalid assignment. `%s` must be a nonnegative integer or nonnegative integer array. Value: `%s`.","6B":"invalid assignment. `%s` must be a nonnegative integer. Value: `%s`.","6C":'invalid assignment. Unrecognized/unsupported `%s`. Must be one of the following: "%s". Value: `%s`.',"6D":"invalid assignment. Unrecognized/unsupported `%s`. Value: `%s`.","6E":"invalid assignment. `%s` must be a nonnegative integer or null. Value: `%s`.","6F":"invalid assignment. `%s` must be a string or null. Value: `%s`.","6G":"invalid argument. Must provide a supported viewer. Value: `%s`.","6H":"invalid assignment. `%s` must be a function. Value: `%s`.","6I":"invalid assignment. `%s` must be either null or an array. Value: `%s`.","6J":"invalid assignment. `%s` must be a string, function, or null. Value: `%s`.","6K":"invalid argument. `options` argument must be an object. Value: `%s`.","6L":"invalid assignment. `%s` must be a number. Value: `%s`.","6M":"invalid assignment. `%s` must be a number on the interval `[0,1]`. Value: `%f`.","6N":"invalid assignment. `%s` must be array-like. Value: `%s`.","6O":"invalid arguments. Must provide equal length array-like objects. x length: `%u`, y length: `%u`.","6P":"invalid assignment. `%s` must be a string or a function. Value: `%s`.","6Q":"invalid assignment. `%s` must be a number or a function. Value: `%s`.","6R":'invalid assignment. `%s` must be one of the following: "%s". Value: `%s`.',"6S":"invalid assignment. `%s` must be a nonnegative integer or a function. Value: `%s`.","6T":'invalid assignment. `%s` must be a supported symbol. Symbols: "%s". Value: `%s`.',"6U":"invalid argument. `options` argument must be a plain object. Value: `%s`.","6V":"invalid assignment. `%s` must be either a string or a string array. Value: `%s`.","6W":"invalid assignment. `%s` must be a string or a string array. Value: `%s`.","6X":"invalid assignment. `%s` must be a string or string array. Value: `%s`.","6Y":"invalid assignment. Unrecognized/unsupported symbol. Value: `[%s]`.","6Z":"invalid assignment. `%s` must be an array. Value: `%s`.","6a":"invalid assignment. `%s` must be either a finite number, Date, or null. Value: `%s`.","6b":"invalid assignment. `%s` must be a boolean or boolean array. Value: `%s`.","6c":"invalid assignment. `%s` must be either a string or string array. Value: `%s`.","6d":'invalid assignment. Unrecognized/unsupported orientation. A `%s` value must be one of the following: "%s". Value: `%s`.',"6e":"invalid assignment. `%s` must be either a finite number or null. Value: `%s`.","6f":"invalid state. x and y are different lengths. x length: `%u`, y length: `%u`.","6g":"invalid state. Each `x[i]:y[i]` pair must be the same length. x[%u].length: `%u`, y[","6h":"invalid assignment. `%s` must be a positive integer or null. Value: `%s`.","6i":"invalid assignment. `%s` size is smaller than the number of data elements. Number of elements: `%u`. Value: `%u`.","6j":"invalid assignment. `%s` must be an array-like object or an ndarray. Value: `%s`.","6k":"invalid assignment. `%s` length exceeds maximum data buffer size. Buffer size: `%u`. Length: `%u`.","6l":"invalid assignment. `%s` must be a finite number or null. Value: `%s`.","6m":"invalid assignment. `%s` must be a finite number or null. Value: `%s.","6n":"invalid assignment. Must be an array or typed array. Value: `%s`.","6o":"invalid option. `%s` option must be an array or typed array. Option: `%s`.","6p":"invalid option. `%s` option must be a function. Option: `%s`.","6q":"invalid argument. Encoding argument must be a string. Value: `%s`.","6r":"invalid argument. Must provide either a string, nonnegative integer, or an options object. Value: `%s`.","6s":"invalid argument. First argument must be either a string or nonnegative integer. Value: `%s`.","6t":'invalid argument. Unable to parse mask expression. Ensure the expression is properly formatted, only uses the class letters "u", "g", "o", and "a", only uses the operators "+", "-", and "=", and only uses the permission symbols "r", "w", and "x". Value: `%s`.',"6u":"invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","6v":"invalid argument. First argument must be a number and not NaN. Value: `%s`.","6w":"invalid argument. Second argument must be a number and not NaN. Value: `%s`.","6x":"invalid argument. Minimum support must be less than maximum support. Value: `[%f,%f]`.","6y":"invalid argument. First argument must be a probability. Value: `%s`.","6z":"invalid option. `%s` option must be a Uint32Array. Option: `%s`.","7A":"invalid argument. First argument must be a positive number and not NaN. Value: `%s`.","7B":"invalid argument. Second argument must be a positive number and not NaN. Value: `%s`.","7C":"invalid argument. Third argument must be a number and not NaN. Value: `%s`.","7D":"invalid argument. Third argument must be less than or equal to the first argument. Value: `%u`.","7E":"invalid argument. Second argument must be less than or equal to the first argument. Value: `%u`.","7F":"invalid %s. State array has insufficient length.","7G":"invalid %s. State array has an incompatible schema version. Expected: `%s`. Actual: `%s`.","7H":"invalid %s. State array has an incompatible number of sections. Expected: `%s`. Actual: `%s`.","7I":"invalid %s. State array has an incompatible state length. Expected: `%u`. Actual: `%u`.","7J":"invalid %s. State array length is incompatible with seed section length. Expected: `%u`. Actual: `%u`.","7K":"invalid option. `%s` option must be an Int32Array. Option: `%s`.","7L":"invalid option. `%s` option must be a positive integer less than the maximum signed 32-bit integer. Option: `%u`.","7M":"invalid option. `%s` option must be either a positive integer less than the maximum signed 32-bit integer or an array-like object containing integer values less than the maximum signed 32-bit integer. Option: `%s`.","7N":"invalid argument. Must provide an Int32Array. Value: `%s`.","7O":"invalid %s. State array has an incompatible table length. Expected: `%s`. Actual: `%s`.","7P":"invalid %s. `state` array has insufficient length.","7Q":"invalid %s. `state` array has an incompatible schema version. Expected: %s. Actual: %s.","7R":"invalid %s. `state` array has an incompatible number of sections. Expected: %s. Actual: %s.","7S":"invalid %s. `state` array has an incompatible state length. Expected: `%u`. Actual: `%u`.","7T":"invalid %s. `state` array has an incompatible section length. Expected: `%u`. Actual: `%u`.","7U":"invalid %s. `state` array length is incompatible with seed section length. Expected: `%u`. Actual: `%u`.","7V":"invalid option. `%s` option must be a positive integer less than or equal to the maximum unsigned 32-bit integer. Option: `%u`.","7W":"invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%u`.","7X":"invalid argument. Second argument must be on the interval: (0, 1). Value: `%f`.","7Y":"invalid option. `%s` option cannot be undefined. Option: `%s`.","7Z":"invalid option. Unrecognized/unsupported PRNG. Option: `%s`.","7a":"invalid argument. First argument must be a positive number or an options object. Value: `%s`.","7b":"invalid arguments. Parameters must satisfy the following condition: %s. Value: `[%f, %f, %f]`.","7c":"invalid argument. Scale parameter must be a positive number. Value: `%s`.","7d":"invalid argument. Shape parameter must be a positive number. Value: `%s`.","7e":"invalid argument. First argument must be an integer. Value: `%s`.","7f":"invalid argument. Second argument must be an integer. Value: `%s`.","7g":"invalid argument. `n` must be less than or equal to `N`. Value: `%u`.","7h":"invalid argument. `K` must be less than or equal to `N`. Value: `%u`.","7i":"invalid argument. `%s` argument must be array-like. Value: `%s`.","7j":"invalid input option. `size` option must be less than or equal to the length of `x` when `replace` is `false`. Option: `%s`.","7k":"invalid input option. `size` option must be less than or equal to the population size when `replace` is `false`. Option: `%s`.","7l":"invalid option. `%s` option must be an array of probabilities that sum to one. Option: `%s`.","7m":"invalid argument. Minimum support must be less than maximum support. Value: `[%s,%s]`.","7n":"invalid option. `%s` option must be a string or null. Option: `%s`.","7o":"invalid argument. Minimum support must be less than or equal to maximum support. Value: `[%s,%s]`.","7p":'invalid argument. Must be one of the following: "%s". Value: `%s`.',"7q":'invalid argument. Mode must be one of the following: "%s". Value: `%s`.',"7r":'invalid argument.  Must be one of the following: "%s". Value: `%s`.',"7s":"invalid operation. Alias already exists in the provided context. Alias: `%s`. Value: `%s`.","7t":"invalid argument. Unrecognized workspace name. Value: `%s`.","7u":"invalid operation. Cannot read from write-only variable `%s`.","7v":"Cannot assign to read only property %s of object #<Object>","7w":"invalid option. `%s` option must be a regular expression or an array-like object. Option: `%s`.","7x":"invalid option. `%s` option must be one of `%s`. Option: `%s`.","7y":"invalid argument. Must provide either an options object or a workspace name. Value: `%s`.","7z":"invalid argument. Must provide either a string or regular expression. Value: `%s`.","8A":"invalid argument. Must provide an integer. Value: `%s`.","8B":"invalid argument. Must provide a positive integer. Value: `%s`.","8C":"invalid argument. Presentation text must be a string. Value: `%s`.","8D":"invalid argument. REPL argument must be a REPL instance. Value: `%s`.","8E":"unexpected error. Unable to reload presentation. Error: %s","8F":"unexpected error. Unable to watch presentation source file. Error: %s","8G":"invalid option. `%s` option must be either a recognized string or boolean. Option: `%s`.","8H":"invalid option. `%s` option must be either a positive integer or null. Option: `%s`.","8I":"invalid operation. Alias already exists in REPL context. Alias: `%s`. Value: `%s`.","8J":"invalid argument. Third argument must be an object. Value: `%s`.","8K":"invalid option. `%s` option must be less than or equal to the period. Option: `%u`.","8L":"invalid option. `%s` option must be greater than 2. Option: `%s`.","8M":"invalid option. `%s` option must be an integer. Option: `%s`.","8N":"invalid option. `%s` option must be an positive integer. Option: `%s`.","8O":"invalid option. `%s` option must be less than the period. Option: `%s`.","8P":"invalid option. `%s` option must be a number. Option: `%s`.","8Q":"invalid option. `%s` option must be an positive even integer. Option: `%s`.","8R":"invalid argument. First argument must be a numeric array. Value: `%s`.","8S":"invalid argument. First argument must contain at least two elements. Value: `%s`.","8T":"invalid argument. Second argument must be an array. Value: `%s`.","8U":"invalid argument. Second argument must contain at least two unique elements. Value: `%s`.","8V":"invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.","8W":"invalid option. `%s` option must be an array containing at least two unique elements. Option: `%s`.","8X":"invalid argument. Must provide array-like arguments. Value: `%s`.","8Y":"invalid argument. Supplied arrays cannot be empty. Value: `%s`.","8Z":"invalid option. `%s` option must be an array. Option: `%s`.","8a":"invalid argument. Minimum support must be a number. Value: `%s`.","8b":"invalid argument. Maximum support must be a number. Value: `%s`.","8c":"invalid arguments. Minimum support must be less than maximum support. Value: `%f, %f`.","8d":"invalid assignment. Must be a number. Value: `%s`.","8e":"invalid assignment. Must be less than %f. Value: `%f`.","8f":"invalid assignment. Must be greater than %f. Value: `%f`.","8g":"invalid argument. Mean parameter `p` must be a probability. Value: `%s`.","8h":"invalid assignment. Must be a probability. Value: `%s`.","8i":"invalid argument. First shape parameter must be a positive number. Value: `%s`.","8j":"invalid argument. Second shape parameter must be a positive number. Value: `%s`.","8k":"invalid assignment. Must be a positive number. Value: `%s`.","8l":"invalid argument. Number of trials must be a positive integer. Value: `%s`.","8m":"invalid argument. Success probability must be a number between 0 and 1. Value: `%s`.","8n":"invalid assignment. Must be a positive integer. Value: `%s`.","8o":"invalid assignment. Must be a number on the interval: [0, 1]. Value: `%s`.","8p":"invalid argument. Location parameter must be a number. Value: `%s`.","8q":"invalid argument. Rate parameter must be a positive number. Value: `%s`.","8r":"invalid argument. Mean parameter `%s` must be a number. Value: `%s`.","8s":"invalid argument. Minimum support must be an integer. Value: `%s`.","8t":"invalid argument. Maximum support must be an integer. Value: `%s`.","8u":"invalid arguments. Minimum support must be less than or equal to maximum support. Value: `%d, %d`.","8v":"invalid assignment. Must be an integer. Value: `%s`.","8w":"invalid assignment. Must be less than or equal to %u. Value: `%d`.","8x":"invalid assignment. Must be greater than or equal to %u. Value: `%s`.","8y":"invalid argument. Shape parameter must be a positive integer. Value: `%s`.","8z":"invalid argument. Numerator degrees of freedom must be a positive number. Value: `%s`.","9A":"invalid argument. Mean parameter `lambda` must be a positive number. Value: `%s`.","9B":"invalid argument. Mode must be a number. Value: `%s`.","9C":"invalid arguments. Parameters must satisfy the following condition: %s. a: `%f`. b: `%f`. c: `%f`.","9D":"invalid assignment. Must be less than or equal to both the maximum support and the mode. Value: `%f`.","9E":"invalid assignment. Must be greater than or equal to both the minimum support and the mode. Value: `%f`.","9F":"invalid assignment. Must be greater than or equal to the minimum support and less than or equal to the maximum support. Value: `%f`.","9G":"invalid argument. An array argument must contain two elements. Value: `%s`.","9H":"invalid argument. Must provide a nonnegative integer or a two-element array. Value: `%s`.","9I":"invalid arguments. Number of successes cannot be larger than the total number of observations. x: `%u`. n: `%u`.","9J":"invalid option. `%s` option must be a probability. Option: `%f`.","9K":"invalid argument. Unsupported/unrecognized distribution name. Value: `%s`.","9L":"invalid argument. First argument must contain nonnegative integers. Index: `%u`. Value: `%s`.","9M":"invalid argument. Probability mass function (PMF) arguments must be numbers. Argument: `%u`. Value: `%s`.","9N":"invalid argument. Second argument must be either an array-like object (or one-dimensional ndarray) of probabilities summing to one, an array-like object (or one-dimensional ndarray) of expected frequencies, or a discrete probability distribution name. Value: `%s`.","9O":"invalid argument. Second argument must only contain numbers. Index: `%u`. Value: `%s`.","9P":"invalid argument. Second argument must only contain nonnegative numbers. Index: `%u`. Value: `%d`.","9Q":"invalid option. `%s` option must be a number on the interval: [0, 1]. Value: `%s`.","9R":"invalid argument. First argument must be an array of arrays or ndarray-like object with dimension two. Value: `%s`.","9S":"invalid argument. First argument must contain nonnegative integers. Value: `%s`.","9T":"invalid argument. First argument must either specify the order of the covariance matrix or be a square 2-dimensional ndarray for storing the covariance matrix. Value: `%s`.","9U":"invalid argument. Second argument must be a 1-dimensional ndarray. Value: `%s`.","9V":"invalid argument. The number of elements (means) in the second argument must match covariance matrix dimensions. Expected: `%u`. Actual: `%u`.","9W":"invalid argument. Vector length must match covariance matrix dimensions. Expected: `%u`. Actual: `%u`.","9X":"invalid argument. Must provide a number. Value: `%s`.","9Y":"invalid argument. Must provide a nonnegative number. Value: `%s`.","9Z":"invalid argument. Must provide a nonnegative number on the interval [0,1]. Value: `%f`.","9a":"invalid argument. Output argument must be an array-like object. Value: `%s`.","9b":"invalid argument. Window size must be a positive integer. Value: `%s`.","9c":"invalid argument. Window size must be greater than or equal to 3. Value: `%s`.","9d":"invalid option. `%s` option must be on the interval [0,1]. Option: `%f`.","9e":"invalid argument. First argument must either specify the order of the correlation distance matrix or be a square 2-dimensional ndarray for storing the correlation distance matrix. Value: `%s`.","9f":"invalid argument. The number of elements (means) in the second argument must match correlation distance matrix dimensions. Expected: `%u`. Actual: `%u`.","9g":"invalid argument. Vector length must match correlation matrix dimensions. Expected: `%u`. Actual: `%u`.","9h":"invalid argument. Vector length must match correlation distance matrix dimensions. Expected: `%u`. Actual: `%u`.","9i":"invalid argument. First argument must either specify the order of the correlation matrix or be a square 2-dimensional ndarray for storing the correlation matrix. Value: `%s`.","9j":"invalid argument. Unsupported/unrecognized kernel. Value: `%s`.","9k":"invalid argument. Second argument must be a numeric array. Value: `%s`.","9l":"invalid option. Lower bound `%s` must be strictly less than the upper bound `%s`.","9m":"invalid option. `%s` option must be an array of positive numbers. Option: `%s`.","9n":"invalid option. `%s` option must be an array of length two. Option: `%s`.","9o":"invalid option. `%s` option must be a string denoting a known kernel function or a custom function. Option: `%s`.","9p":"invalid arguments. First argument and `%s` must be arrays having the same length.","9q":"invalid invocation. Incorrect number of arguments. Must provide at least two array-like arguments. Value: `%s`.","9r":"invalid option. `%s` must be a number on the interval: [0, 1]. Value: `%f`.","9s":"invalid argument. First argument must be a typed array or number array. Value: `%s`.","9t":"invalid argument. Second argument must be either a CDF function or a string. Value: `%s`.","9u":"invalid argument. Distribution parameter must be a number. Value: `%s`.","9v":"invalid option. `%s` option must contain at least two unique elements. Value: `%s`.","9w":"invalid argument. Provided arrays cannot be empty. Value: `%s`.","9x":"invalid argument. First argument must be an array of probabilities. Value: `%s`.","9y":"invalid argument. When specified, `%s` arguments must contain at least a length of %u. Value: `%u`.","9z":"invalid argument. Second argument must be one of the following: %s. Value: `%s`.",A0:"invalid option. `%s` option must be a number in `[0,1]`. Option: `%s`.",A1:"invalid option. `%s` option must be a number on the interval: [-1, 1]. Option: `%s`.",A2:"invalid argument. First argument must contain at least two elements. Value: `%s`.",A3:"invalid argument. Second argument must be either a numeric array or an options object. Value: `%s`.",A4:"invalid option. `%s` option must be either `equal` or `unequal`. Option: `%s`.",A5:"invalid argument. `%s` argument must be a numeric array. Value: `%s`.",A6:"invalid option. `%s` option must be one of the following: %s. Option: `%s`.",A7:"invalid argument. Third argument must be a positive number. Value: `%s`.",A8:"invalid argument. Fourth argument must be a positive number. Value: `%s`.",A9:"invalid operation. Serialization function must return a string or Buffer. Value: `%s`.",AA:"invalid argument. In binary mode, a provided value must be a string, Buffer, or Uint8Array. Value: `%s`.",AB:"invalid option. `%s` option must be either a string or a regular expression. Option: `%s`.",AC:"invalid argument. First input array offset must be a nonnegative integer. Value: `%s`.",AD:"invalid argument. Second input array offset must be a nonnegative integer. Value: `%s`.",AE:"invalid argument. Output array offset must be a nonnegative integer. Value: `%s`.",AF:"invalid argument. Must provided recognized data types. Unable to resolve a data type string. Value: `%s`.",AG:"invalid argument. Input array offset must be a nonnegative integer. Value: `%s`.",AH:"invalid argument. Input array stride must be an integer. Value: `%s`.",AI:"invalid argument. Output array stride must be an integer. Value: `%s`.",AJ:"invalid option. `%s` option must be an array of strings. Option: `%s`.",AK:"invalid argument. Must provide a valid position (i.e., within string bounds). Value: `%s`.",AL:"invalid argument. Third argument must be a boolean. Value: `%s`.",AM:"invalid argument. Must provide valid code points (i.e., nonnegative integers). Value: `%s`.",AN:"invalid argument. Must provide a valid code point (cannot exceed max). Value: `%s`.",AO:"invalid argument. Third argument must be a string. Value: `%s`.",AP:"invalid argument. Output string length exceeds maximum allowed string length. Value: `%u`.",AQ:"invalid argument. Third argument must be a string or an array of strings. Value: `%s`.",AR:"invalid argument. At least one padding option must have a length greater than 0. Left padding: `%s`. Right padding: `%s`.",AS:"invalid argument. Second argument must be an array of strings. Value: `%s`.",AT:"invalid argument. Second argument must be a string or regular expression. Value: `%s`.",AU:"invalid argument. Third argument must be a string or replacement function. Value: `%s`.",AV:"invalid argument. Must provide a string or an array of strings. Value: `%s`.",AW:"invalid argument. If only providing a single argument, must provide a Date object. Value: `%s`.",AX:"invalid argument. First argument must be either a string or integer. Value: `%s`.",AY:"invalid argument. Day number must be on the interval: `[1, %u]`. Value: `%d`.",AZ:"invalid argument. First argument must be either a string, integer, or Date object. Value: `%s`.",Aa:"invalid argument. An integer month value must be on the interval: [1, 12]. Value: `%s`.",Ab:"invalid argument. Must provide a recognized month. Value: `%s`.",Ac:"invalid argument. Must provide either an integer or a `Date` object. Value: `%s`.",Ad:"invalid argument. Must provide either a string, integer, or Date object. Value: `%s`.",Ae:"invalid argument. Must provide an array of nonnegative integers. Value: `%s`.",Af:"invalid argument. Input array must contain two elements. Value: `%s`.",Ag:"invalid argument. Must provide a collection. Value: `%s`.",Ah:"invalid argument. First argument must be a collection. Value: `%s`.",Ai:"invalid argument. First argument must be either an array, typed array, or an array-like object. Value: `%s`.",Aj:"invalid argument. All arguments must be functions. Value: `%s`.",Ak:"invalid argument. Number of function invocations must be a nonnegative integer. Value: `%s`.",Al:"invalid argument. First argument must be an array of functions. Value: `%s`.",Am:"invalid argument. Last argument must be a collection. Value: `%s`.",An:"invalid argument. Must provide either a valid buffer size (i.e., a positive integer) or an array-like object which can serve as the underlying buffer. Value: `%s`.",Ao:"invalid argument. An iterator must return an array-like object containing vertices. Value: `%s`.",Ap:"invalid argument. Callback must return an array-like object containing vertices. Value: `%s`.",Aq:"invalid argument. Callback must return an array-like object. Value: `%s`.",Ar:"invalid argument. Each element of the adjacency list must be an array-like object. Value: `%s`.",As:"invalid argument. Each element of the edge list must be an array-like object. Value: `%s`.",At:"invalid argument. Second argument must be an array-like object or an iterable. Value: `%s`.",Au:"invalid argument. First argument exceeds matrix dimensions. Value: `%u`.",Av:"invalid argument. Second argument exceeds matrix dimensions. Value: `%u`.",Aw:"invalid argument. Vertex cannot exceed matrix dimensions. Value: `%u`.",Ax:"invalid argument. Second argument must be a recognized output path convention. Value: `%s`.",Ay:"invalid argument. Cannot convert Windows extended-length paths to POSIX paths. Value: `%s`.",Az:"invalid argument. Arity argument must be a positive integer. Value: `%s`.",B0:"invalid argument. Property descriptor must be an object. Value: `%s`.",B1:"invalid argument. The `value` property of the property descriptor must be a function. Value: `%s`.",B2:"invalid argument. Second argument must be an object of property descriptors. Value: `%s`.",B3:"invalid argument. Path must be a string. Value: `%s`.",B4:"invalid argument. Third argument must be a recognized location. Value: `%s`.",B5:"invalid argument. Must provide a recognized iteration direction. Value: `%s`.",B6:"invalid argument. Must provide an object-like value. Value: `%s`.",B7:"invalid argument. Must provide a regular expression string. Value: `%s`.",B8:"invalid argument. Filename must be a string. Value: `%s`.",B9:"invalid argument. First argument must be an array of positive integers. Value: `%s`.",BA:"invalid argument. First argument must be object-like. Value: `%s`.",BB:"invalid argument. Must provide an array of arrays. Value: `%s`.",BC:"invalid argument. Must provide a boolean. Value: `%s`.",BD:"invalid argument. Second argument must have a prototype from which another object can inherit. Value: `%s`.",BE:"invalid argument. A provided constructor must be either an object (except null) or a function. Value: `%s`.",BF:"invalid argument. If the input array is an ndarray, the output array must also be an ndarray. Value: `%s`.",BG:"invalid argument. If the input array is an array-like object, the output array must also be an array-like object. Value: `%s`.",BH:"invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.",BI:"invalid argument. If the first input array is an ndarray, the second input array must also be an ndarray. Value: `%s`.",BJ:"invalid argument. If the input arrays are ndarrays, the output array must also be an ndarray. Value: `%s`.",BK:"invalid argument. If the first input array is an array-like object, the second input array must also be an array-like object. Value: `%s`.",BL:"invalid argument. If the input arrays are array-like objects, the output array must also be an array-like object. Value: `%s`.",BM:"invalid argument. First argument must be an array-like object containing array-like objects. Index: `%u`. Value: `%s`.",BN:"invalid argument. First argument must be a three-dimensional nested array. Index: `%u`. Value: `%s`.",BO:"invalid argument. First argument must be a four-dimensional nested array. Index: `%u`. Value: `%s`.",BP:"invalid argument. First argument must be a four-dimensional nested array. Indices: (%u, %u). Value: `%s`.",BQ:"invalid argument. First argument must be a four-dimensional nested array. Indices: (%u, %u, %u). Value: `%s`.",BR:"invalid argument. First argument must be a five-dimensional nested array. Index: `%u`. Value: `%s`.",BS:"invalid argument. First argument must be a five-dimensional nested array. Indices: (%u, %u). Value: `%s`.",BT:"invalid argument. First argument must be a five-dimensional nested array. Indices: (%u, %u, %u). Value: `%s`.",BU:"invalid argument. First argument must be a five-dimensional nested array. Indices: (%u, %u, %u, %u). Value: `%s`.",BV:"invalid argument. A merge source must be an object. Value: `%s`.",BW:"invalid option. `%s` option must be either a boolean or a function. Option: `%s`.",BX:"invalid argument. Source argument must be an object. Value: `%s`.",BY:"invalid argument. Target argument must be an object. Value: `%s`.",BZ:"invalid argument. Must provide an array of strings. Value: `%s`.",Ba:"invalid argument. Field names must be distinct. Value: `%s`.",Bb:"invalid argument. Provided field name is reserved. Name: `%s`.",Bc:"invalid arguments. Arguments are incompatible with the number of tuple fields. Number of fields: `%u`. Number of data elements: `%u`.",Bd:"invalid argument. Source is incompatible with the number of tuple fields. Number of fields: `%u`. Source length: `%u`.",Be:"invalid invocation. Number of arguments is incompatible with the number of tuple fields. Number of fields: `%u`. Number of arguments: `%u`.",Bf:"invalid option. `%s` option must be a recognized data type. Option: `%s`.",Bg:"invalid argument. Second argument must be either a string or an array of strings. Value: `%s`.",Bh:"invalid argument. Must provide a valid URI. Value: `%s`.",Bi:"unexpected error. Child process failed with exit code: `%u`.",Bj:"unexpected error. Child process failed due to termination signal: `%s`.",Bk:"invalid argument. Reviver argument must be a function. Value: `%s`.",Bl:"invalid argument. Second argument must be an array-like object containing nonnegative integers. Value: `%s`.",Bm:"invalid argument. Must provide either an array, typed array, or an array-like object. Value: `%s`.",Bn:"invalid argument. Must provide a recognized type. Value: `%s`.",Bo:"invalid argument. Second argument must be an array containing only nonnegative integers. Value: `%s`.",Bp:"invalid invocation. Unexpected number of input arguments. Expected: `%u`. Actual: `%u`.",Bq:"evaluation error. Encountered an error when evaluating snippet. %s",Br:"invalid option. `%s` option must be a positive integer or null. Option: `%s`.",Bs:"insufficient arguments. Expected %u argument(s) and only received %u argument(s).",Bt:"invalid invocation. The configured arity exceeds the number of possible curried function invocations. Expected: %u. Actual: %u.",Bu:"invalid invocation. Number of arguments exceeds the number of possible curried function invocations. Expected: `%u`. Actual: `%u`.",Bv:"invalid invocation. The configured arity exceeds the number of possible curried function invocations. Expected: `%u`. Actual: `%u`.",Bw:"invalid argument. Must provide array arguments. Value: `%s`.",Bx:"invalid argument. Last argument must be either an array or an options object. Value: `%s`.",By:"invalid argument. Repository slug must be a string. Value: `%s`.",Bz:"invalid argument. Issue title must be a string. Value: `%s`.",C0:'invalid option. `%s` must be one of the following: "%s". Option: `%s`.',C1:"invalid argument. Repository name must be a string. Value: `%s`.",C2:"invalid option. `%s` option must be a valid URI. Option: `%s`.",C3:"invalid option. `%s` option must be a 20-character string. Option: `%s`.",C4:"invalid option. `%s` option must be a 40-character string. Option: `%s`.",C5:"invalid argument. Token id must be a nonnegative integer. Value: `%s`.",C6:"invalid argument. Workflow identifier must be a string. Value: `%s`.",C7:"invalid option. `%s` option must be an object of input key-value pairs. Option: `%s`.",C8:'invalid option. `%s` option must be a positive integer or "last". Option: `%s`.',C9:"invalid option. `%s` organization name option must be a string. Option: `%s`.",CA:"invalid option. Unknown method. Option: `%s`.",CB:'invalid option. Unrecognized `%s` option. Must be one of the following: "%s". Option: `%s`.',CC:'invalid argument. Repository slug must consist of an owner and a repository (e.g., "stdlib-js/utils"). Value: `%s`.',CD:"invalid argument. Topics argument must be an array of strings. Value: `%s`.",CE:'invalid option. `%s` option must be one of the following: "%s" or "%s". Option: `%s`.',CF:"invalid argument. Must provide a supported license SPDX identifier. Value: `%s`.",CG:"invalid argument. Must provide a supported file type. Value: `%s`.",CH:"invalid argument. First argument must be either a string or Buffer. Value: `%s`.",CI:"invalid argument. Second argument must be either a string or Buffer. Value: `%s`.",CJ:"invalid argument. A header object must map each filename extension to a license header string. `%s: %s`. Value: `%s`.",CK:"invalid argument. Second argument must be either a string or an object whose keys are filename extensions and whose values are header strings. Value: `%s`.",CL:"invalid argument. Second argument must be either a string, Buffer, or regular expression. Value: `%s`.",CM:"invalid argument. A header object must map each filename extension to a license header string or regular expression. `%s: %s`. Value: `%s`.",CN:"invalid argument. Second argument must be either a string, a regular expression, or an object whose keys are filename extensions and whose values are header strings or regular expressions. Value: `%s`.",CO:"invalid argument. Third argument must be either a string or Buffer. Value: `%s`.",CP:"invalid argument. Third argument must be either a string or an object whose keys are filename extensions and whose values are header strings. Value: `%s`.",CQ:"invalid argument. Database already contains an entry for the provided URI: `%s`.",CR:"invalid argument. Database already contains an entry for the provided id: `%s`.",CS:"invalid argument. First argument must be a URI. Value: `%s`.",CT:"invalid argument. Second argument must be either a string or regular expression. Value: `%s`.",CU:"invalid option. A `%s` option object must map each filename extension to a license header string or regular expression. `%s: %s`. Value: `%s`.",CV:"invalid option. `%s` option must be either a string, a regular expression, or an object whose keys are filename extensions and whose values are header strings or regular expressions. Option: `%s`.",CW:'invalid option. `%s` option must end with "package.json". Option: `%s`.',CX:"invalid argument. Last argument must be a callback function. Value: `%s`.",CY:"invalid option. `%s` option must be an array of package names. Option: `%s`.",CZ:"invalid argument. Version argument must be a string. Value: `%s`.",Ca:"invalid argument. Must provide either a string or a Buffer. Value: `%s`.",Cb:"invalid argument. Must provide either a string or Buffer. Value: `%s`.",Cc:"invalid argument. First argument must be either a string or array of strings. Value: `%s`.",Cd:"invalid option. `%s` option must be an object. Option: `%s`.",Ce:"unexpected error. File does not exist. Unable to resolve file: %s.",Cf:"invalid argument. Must provide either a string or an array of strings. Value: `%s`.",Cg:"invalid argument. Must provide either a string or an array of strings. Value: `%s`. Index: `%u`.",Ch:"unexpected error. Failed to sort packages. Detected the following dependency chain containing a cycle: `%s`.",Ci:"invalid node. Equation comments must have a valid label. Node: `%s`.",Cj:"invalid node. Equation comments must have valid alternate text. Node: `%s`.",Ck:"invalid node. Equation comments must have valid raw equation text. Node: `%s`.",Cl:"invalid node. Invalid equation comment. Ensure that the Markdown file includes both starting and ending equation comments. Node: `%s`.",Cm:"invalid node. Equation element must have a valid label. Node: `%s`.",Cn:'unexpected error. Code block configuration settings should be provided as comma-separated `key:value` pairs (e.g., `foo:true, bar:"string", baz:["error",2]`). Value: `%s`.',Co:"unexpected error. Code block configuration values should be parseable as JSON. Value: `%s`.",Cp:"unexpected error. Encountered an error when executing code block. File: `%s`. Message: `%s`.",Cq:"unexpected error. Expected code block to throw an exception. File: `%s`.",Cr:'invalid node. Ensure that the Markdown file includes both a starting `<section class="related">` and closing `</section>\\n\\n\x3c!-- /.related --\x3e`. Node: `%s`.',Cs:"invalid node. Equation comments must have valid equation text. Node: `%s`.",Ct:"invalid node. Equation comments must have valid labels. Node: `%s`.",Cu:'invalid option. `%s` option must begin with "@stdlib/". Option: `%s`.',Cv:"invalid argument. First argument must be a list of file paths. Value: `%s`.",Cw:"invalid arguments. Subpopulation size must be less than or equal to the population size.",Cx:"invalid arguments. Number of draws must be less than or equal to the population size.",Cy:"invalid arguments. Fourth argument is not compatible with the number of input and output ndarrays.",Cz:"invalid arguments. Input buffer is incompatible with the specified meta data. Ensure that the offset is valid with regard to the strides array and that the buffer has enough elements to satisfy the desired array shape.",D0:"invalid arguments. Length of the first argument is incompatible with the second and third arguments.",D1:"invalid argument. Provided collections must have the same length.",D2:"invalid argument. First argument must be an array-like object containing nonnegative integers.",D3:"invalid arguments. Input arrays must have the same length.",D4:"invalid argument. Must provide valid indices (i.e., must be a nonnegative integer less than or equal to the tuple length).",D5:"not implemented. Please post an issue on the @stdlib/stdlib issue tracker if you would like this to be implemented. https://github.com/stdlib-js/stdlib/issues/new/choose",D6:"invalid operation. Parser is unable to parse new chunks, as the parser has been closed. To parse new chunks, create a new parser instance.",D7:"invalid operation. Parser is in an unrecoverable error state. To parse new chunks, create a new parser instance.",D8:"invalid argument. First argument must be a one-dimensional ndarray containing double-precision floating-point numbers (i.e., an ndarray whose underlying data buffer is a Float64Array). Value: `%s`.",D9:"invalid argument. Second argument must be a one-dimensional ndarray containing double-precision floating-point numbers (i.e., an ndarray whose underlying data buffer is a Float64Array). Value: `%s`.",DA:"invalid argument. First argument must be a one-dimensional ndarray containing single-precision floating-point numbers (i.e., an ndarray whose underlying data buffer is a Float32Array). Value: `%s`.",DB:"invalid argument. Second argument must be a one-dimensional ndarray containing single-precision floating-point numbers (i.e., an ndarray whose underlying data buffer is a Float32Array). Value: `%s`.",DC:"invalid assignment. `%s` size is less than the number of data elements. Number of elements: `%u`. Value: `%u`.",DD:"invalid assignment. `%s` must be a string or an array of strings. Value: `%s`.",DE:"invalid assignment. `%s` must be a number or an array of numbers. Value: `%s`.",DF:"invalid assignment. `%s` must be a nonnegative integer or an array of nonnegative integers. Value: `%s`.",DG:"invalid assignment. `%s` must be a finite number, Date, or null. Value: `%s`.",DH:"invalid assignment. `%s` must be a boolean or an array of booleans. Value: `%s`.",DI:"invalid assignment. `%s` must be a number or null. Value: `%s`.",DJ:"invalid assignment. `%s` must be an array of strings or an empty array. Value: `%s`.",DK:"invalid state. x and y are different lengths. x length: `%u`. y length: `%u`.",DL:"invalid state. Each `x[i]:y[i]` pair must be the same length. x[%u].length: `%u`, y[%u].length: `%u`.",DM:"invalid assignment. `%s` must be a number on the interval: [0, 1]. Value: `%f`.",DN:"invalid assignment. `%s` must be null or an array. Value: `%s`.",DO:"invalid arguments. Must provide equal length array-like objects. x length: `%u`. y length: `%u`.",DP:"invalid argument. The number of comparisons must be greater or equal to the number of p-values to be adjusted. Value: `%u`.",DQ:'invalid argument. Second argument must be one of the following: "%s". Value: `%s`.',DR:"invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%s`.",DS:"invalid argument. First argument must contain nonnegative integers. Indices: (%s). Value: `%s`.",DT:"invalid argument. First argument must be an array of arrays or a two-dimensional ndarray-like object. Number of input array dimensions: %u.",DU:"invalid argument. First argument must be an array of arrays or a two-dimensional ndarray-like object. Value: `%s`.",DV:"invalid arguments. Minimum support must be less than maximum support. Value: `(%f, %f)`.",DW:"invalid arguments. Minimum support must be less than or equal to maximum support. Value: `(%d, %d)`.",DX:"invalid argument. Mean parameter must be a positive number. Value: `%s`.",DY:"invalid argument. Mean parameter must be a probability. Value: `%s`.",DZ:"invalid option. `%s` option must be on the interval: [0, 1]. Option: `%f`.",Da:"invalid argument. Must provide a nonnegative number on the interval: [0, 1]. Value: `%f`.",Db:"invalid argument. First argument must either specify the order of the covariance matrix or be a square two-dimensional ndarray for storing the covariance matrix. Value: `%s`.",Dc:"invalid argument. Second argument must be a one-dimensional ndarray. Value: `%s`.",Dd:"invalid argument. Must provide a one-dimensional ndarray. Value: `%s`.",De:"invalid argument. First argument must either specify the order of the correlation distance matrix or be a square two-dimensional ndarray for storing the correlation distance matrix. Value: `%s`.",Df:"invalid argument. First argument must either specify the order of the correlation matrix or be a square two-dimensional ndarray for storing the correlation matrix. Value: `%s`.",Dg:"invalid argument. Input array must be an array-like object. Value: `%s`.",Dh:"invalid argument. Output array must be an array-like object. Value: `%s`.",Di:"invalid argument. Mask array offset must be a nonnegative integer. Value: `%s`.",Dj:"invalid argument. Must provide recognized data types. Unable to resolve a data type string. Value: `%s`.",Dk:"invalid option. `%s` option must be one of the following: ['%s']. Option: `%s`.",Dl:"invalid argument. Database already contains an entry for the provided URI. Value: `%s`.",Dm:"invalid argument. Database already contains an entry for the provided id. Value: `%s`.",Dn:"invalid argument. First argument must be an array of objects. Value: `%s`.",Do:"unexpected error. File does not exist. Unable to resolve file: `%s`.",Dp:"invalid argument. First argument must be either a string or an array of strings. Value: `%s`.",Dq:"invalid argument. First argument must be either a string or an array of strings. Value: `%s`. Index: `%u`.",Dr:"invalid argument. Must provide either an options object or a function. Value: `%s`.",Ds:"invalid option. `%s` option must be a nonnegative integer or an array of nonnegative integers. Option: `%s`.",Dt:"invalid argument. Fourth argument must contain a single element equal to 0. Value: `%d`.",Du:"invalid argument. Indices must be integer valued. Argument: `%i`. Value: `%s`.",Dv:"invalid argument. Must provide an ndarray. Value: `%s`.",Dw:"invalid argument. Second argument must be a supported data type policy. Value: `%s`.",Dx:"invalid argument. Must provide either an integer or a Date object. Value: `%s`.",Dy:"invalid argument. Must provide a valid duration string. Value: `%s`.",Dz:"invalid argument. Day number must be on the interval: [1, %u]. Value: `%d`.",E0:"invalid argument. First argument must be a string or integer. Value: `%s`.",E1:'invalid option. `%s` option must be one of the following: "%s". Value: `%s`.',E2:"invalid argument. Third argument must be either an integer (starting index) or a function. Value: `%s`.",E3:"invalid argument. Fourth argument must be either an integer (ending index) or a function. Value: `%s`.",E4:"invalid argument. Second argument must be a valid position (i.e., be within string bounds). Value: `%d`.",E5:"invalid argument. Must provide a valid code point (i.e., cannot exceed %u). Value: `%s`.",E6:"invalid argument. First argument must be astring. Value: `%s`.",E7:"invalid argument. Second argument must be either an integer (starting index) or a function. Value: `%s`.",E8:"invalid argument. Third argument must be either an integer (ending index) or a function. Value: `%s`.",E9:"invalid argument. ArrayBuffer byte length must be a multiple of %u. Byte length: `%u`.",EA:"invalid argument. Byte offset must be a multiple of %u. Value: `%u`.",EB:"invalid argument. First argument must have a length which is a multiple of %u. Length: `%u`.",EC:"invalid argument. Second argument must be a supported data type. Value: `%s`.",ED:'invalid argument. First argument must be one of the following data types: "%s". Value: `%s`.',EE:"invalid argument. Second argument must be either an integer (starting view index) or a function. Value: `%s`.",EF:"invalid argument. Third argument must be either an integer (ending view index) or a function. Value: `%s`.",EG:"invalid option. `size` option must be less than or equal to the length of `x` when `replace` is `false`. Option: `%s`.",EH:"invalid option. `size` option must be less than or equal to the population size when `replace` is `false`. Option: `%s`.",EI:"invalid argument. Second argument must be either a scalar or an ndarray-like object. Value: `%s`.",EJ:"invalid argument. Minimum support must be less than maximum support. Value: `[%f, %f]`.",EK:"invalid argument. Minimum support must be less than or equal to maximum support. Value: `[%d, %d]`.",EL:"invalid %s. `state` array has an incompatible schema version. Expected: `%s`. Actual: `%s.`",EM:"invalid %s. `state` array has an incompatible number of sections. Expected: `%s`. Actual: `%s`.",EN:"invalid argument. Number of draws must be less than or equal to the population size. Value: `%u`.",EO:"invalid argument. Subpopulation size must be less than or equal to the population size. Value: `%u`.",EP:"invalid argument. Must provide a regular expression. Value: `%s`.",EQ:"invalid argument. Second argument must be an object containing property descriptors. Value: `%s`.",ER:"invalid argument. Must provide an object (except null). Value: `%s`.",ES:"invalid argument. First argument must be an object (except null). Value: `%s`.",ET:"unexpected error. Encountered an invalid record. Field %d on line %d contains a closing quote which is not immediately followed by a delimiter or newline.",EU:"unexpected error. Encountered an invalid record. Field %d on line %d contains an opening quote which does not immediately follow a delimiter or newline.",EV:"unexpected error. Encountered an invalid record. Field %d on line %d contains an escape sequence which is not immediately followed by a special character sequence.",EW:"unexpected error. Encountered an invalid record. Field %d on line %d contains an escape sequence within a quoted field which is not immediately followed by a quote sequence.",EX:"invalid argument. First argument must be a function having at least one parameter. Value: `%s`.",EY:"invalid argument. All arguments must be objects. Index: `%u`. Value: `%s`.",EZ:"invalid argument. First argument must be a non-null object. Value: `%s`.",Ea:"invalid argument. First argument must be an ndarray whose last dimension is of size %u. Actual size: `%u`.",Eb:"invalid argument. Attempting to scale a weight vector by a nonpositive value. This is likely due to too large a value of eta * lambda. Value: `%f`.",Ec:"invalid argument. Output argument must be a one-dimensional ndarray. Value: `%s`.",Ed:"invalid argument. Must provide a two-dimensional ndarray. Value: `%s`.",Ee:"invalid argument. Number of matrix columns must match centroid dimensions. Expected: `%u`. Actual: `%u`.",Ef:"invalid argument. First argument must be an integer, null, or undefined. Value: `%s`.",Eg:"invalid argument. Second argument must be an integer, null, or undefined. Value: `%s`.",Eh:"invalid argument. Third argument must be an integer, null, or undefined. Value: `%s`.",Ei:"invalid argument. Third argument cannot be zero. Value: `%s`.",Ej:"invalid argument. First argument must be a valid subsequence string. Value: `%s`.",Ek:"invalid argument. A subsequence string must have a non-zero increment. Value: `%s`.",El:"invalid argument. The subsequence string resolves to a slice which exceeds index bounds. Value: `%s`.",Em:"invalid argument. Provided arguments must be either a Slice, integer, null, or undefined. Argument: `%d`. Value: `%s`.",En:"invalid operation. Unsupported slice operation. Value: `%s`.",Eo:"invalid operation. Number of array dimensions does not match the number of slice dimensions. Array shape: (%s). Slice dimensions: %u.",Ep:"invalid operation. Slice exceeds array bounds. Array shape: (%s).",Eq:"invalid operation. A subsequence increment must be a non-zero integer. Value: `%s`.",Er:"invalid operation. A subsequence may only include a single ellipsis. Value: `%s`.",Es:"invalid argument. Cannot write to a read-only array.",Et:"invalid argument. Number of slice dimensions does not match the number of array dimensions. Array shape: (%s). Slice dimensions: %u.",Eu:"invalid argument. Slice arguments must be either a Slice, integer, null, or undefined. Value: `%s`.",Ev:"invalid operation. Number of slice dimensions does not match the number of array dimensions. Array shape: (%s). Slice dimensions: %u.",Ew:"invalid operation. Assigned value cannot be safely cast to the target array data type. Data types: [%s, %s].",Ex:"invalid operation. Unsupported target array data type. Data type: `%s`.",Ey:"invalid argument. Index must be on the interval: [0, %d]. Value: `%d`.",Ez:"invalid argument. Slice exceeds array bounds. Array shape: (%s).",F0:"invalid argument. Input array values cannot be safely cast to the output array data type. Data types: [%s, %s].",F1:"invalid argument. Second argument must be an ndarray. Value: `%s`.",F2:"invalid argument. First argument must be an ndarray having at least two dimensions.",F3:"invalid argument. Second argument must be an array of nonnegative integers. Value: `%s`.",F4:"invalid option. Cannot write to read-only array.",F5:"invalid argument. First argument must be an array of nonnegative integers. Value: `%s`.",F6:"invalid argument. Must provide an ndarray having a supported data type. Value: `%s`.",F7:"invalid argument. First argument must be an ndarray having one or more dimensions. Number of dimensions: %d.",F8:"invalid argument. Dimension index exceeds the number of dimensions. Number of dimensions: %d. Value: `%d`.",F9:"invalid argument. Third argument must be either a Slice, integer, null, or undefined. Value: `%s`.",FA:"invalid argument. First argument must be an ndarray having at least three dimensions.",FB:"invalid argument. Index must resolve to a value on the interval: [0, %d]. Value: `%d`.",FC:"invalid argument. First argument must be a recognized index mode. Value: `%s`.",FD:"invalid argument. Third argument exceeds the number of dimensions. Number of dimensions: %d. Value: `%d`.",FE:"invalid argument. Number of indices does not match the number of array dimensions. Array shape: (%s). Number of indices: %u.",FF:"invalid argument. Each index argument must be either an integer, null, or undefined. Value: `%s`.",FG:"invalid argument. First argument must be a complex number. Value: `%s`.",FH:"invalid arguments. Input arrays must be broadcast compatible.",FI:"invalid argument. The first and second arguments must have the same length.",FJ:"invalid argument. First argument must be either an ndarray or an array of ndarrays. Value: `%s`.",FK:"invalid argument. An ndarray argument must be an ndarray. Value: `%s`.",FL:"invalid argument. Second argument must be a valid property name. Value: `%s`.",FM:"invalid argument. First argument must have a `%s` method.",FN:"invalid argument. Second argument must an array of strings. Value: `%s`.",FO:"invalid argument. Third argument must be a supported data type. Value: `%s`.",FP:"invalid argument. Index argument is out-of-bounds. Value: `%s`.",FQ:"invalid argument. Second argument must be a complex number. Value: `%s`.",FR:"invalid argument. Index arguments must be integers. Value: `%s`.",FS:"invalid argument. Slice exceeds array bounds. Array length: %d.",FT:"invalid argument. Input array and the output array slice are broadcast incompatible. Array length: %u. Desired length: %u.",FU:"invalid operation. Slice exceeds array bounds.",FV:"invalid argument. First argument must be a valid index array.",FW:"invalid operation. This array index instance has already been freed and can no longer be used.",FX:"invalid argument. First argument must be a complex-valued floating-point array. Value: `%s`.",FY:"invalid operation. Index exceeds array bounds.",FZ:"invalid operation. Unrecognized array index type. Value: `%s`.",Fa:"invalid operation. Unable to resolve array index. Value: `%s`.",Fb:"invalid option. `%s` option is missing a `%s` method. Option: `%s`.",Fc:"invalid operation. If not provided an initial value, an array must contain at least one element.",Fd:"invalid arguments. Must provide equal length array-like objects.",Fe:"Index out of bounds",Ff:"invalid option. `%s` option must be less than or equal to 64. Option: `%u`.",Fg:"invalid argument. Unable to parse input string as a complex number. Value: `%s`.",Fh:"invalid operation. Cannot access settings for a REPL which has already closed.",Fi:"invalid argument. First argument must be a recognized setting. Value: `%s`.",Fj:"invalid invocation. `this` is not a boolean array.",Fk:"invalid argument. Unable to parse commits for package: `%s`.",Fl:"invalid argument. Unrecognized release type: `%s`.",Fm:"invalid argument. First argument must be a supported BLAS memory layout. Value: `%s`.",Fn:"invalid argument. First argument must be an existing theme name. Value: `%s`.",Fo:"invalid argument. First argument must not be the default theme name. Value: `%s`.",Fp:"invalid argument. Second argument must be an object. Value: `%s`.",Fq:"invalid arguments. Number of values does not equal the number of falsy values in the mask array.",Fr:"invalid arguments. Insufficient values to satisfy mask array.",Fs:"invalid arguments. Input arguments are not broadcast compatible.",Ft:"invalid arguments. Number of values does not equal the number of truthy values in the mask array.",Fu:"invalid argument. Third argument cannot be safely cast to the input array data type. Data types: [%s, %s].",Fv:"invalid argument. First argument must be a boolean. Value: `%s`.",Fw:"invalid argument. The third argument must be broadcast compatible with the second argument. Array shape: (%d). Desired shape: (%d).",Fx:"invalid argument. First argument must be a valid order. Value: `%s`.",Fy:"invalid argument. Second argument must specify whether the lower or upper triangular matrix is supplied. Value: `%s`.",Fz:"invalid argument. Third argument must be a nonnegative integer. Value: `%d`.",G0:"invalid argument. Eighth argument must be non-zero. Value: `%d`.",G1:"invalid argument. Twelfth argument must be non-zero. Value: `%d`.",G2:"invalid argument. Seventh argument must be non-zero. Value: `%d`.",G3:"invalid argument. Tenth argument must be non-zero. Value: `%d`.",G4:"invalid argument. Fourth argument must be greater than or equal to max(1,%d). Value: `%d`.",G5:"invalid argument. First argument must be a string or an array of strings. Value: `%s`."};function Ia(){return function(e,n){var t;if(arguments.length>1){if(!ce(n))throw new TypeError(M("invalid argument. Second argument must be a nonnegative integer. Value: `%s`.",n));if(0===n)return e}else n=re;return Ma(e,t=Q(e)?new Array(e.length):{},[e],[t],n)}(ka)}var Ta,Ba=Object.prototype;function Ca(e){var n;return!!function(e){return"object"==typeof e&&null!==e&&!Q(e)}(e)&&(!(n=qe(e))||!Y(e,"constructor")&&Y(n,"constructor")&&Re(n.constructor)&&"[object Function]"===X(n.constructor)&&Y(n,"isPrototypeOf")&&Re(n.isPrototypeOf)&&(n===Ba||function(e){var n;for(n in e)if(!Y(e,n))return!1;return!0}(e)))}function Ua(e){if(!z(e))throw new TypeError(function(){var e,n=arguments,t="https://stdlib.io/e/"+n[0]+"?";for(e=1;e<n.length;e++)t+="&arg[]="+encodeURIComponent(n[e]);return t}("0Nx3B",e));return Ta||(Ta=function(e,n){var t,a,i,r,o,u,s,l=!0;if(!fe(e))throw new TypeError(M("invalid argument. First argument must be an object (except null). Value: `%s`.",e));if(arguments.length>1){if(!Ca(n))throw new TypeError(M("invalid argument. Options argument must be an object. Value: `%s`.",n));if(Y(n,"duplicates")&&!Ve(l=n.duplicates))throw new TypeError(M("invalid option. `%s` option must be a boolean. Option: `%s`.","duplicates",l))}if(a=(t=vn(e)).length,o={},l)for(s=0;s<a;s++)Y(o,r=e[i=t[s]])?(u=o[r],Q(u)?o[r].push(i):o[r]=[u,i]):o[r]=i;else for(s=0;s<a;s++)o[e[i=t[s]]]=i;return o}(Ia(),{duplicates:!1})),Y(Ta,e)?Ta[e]:null}export{Ua as default};
//# sourceMappingURL=mod.js.map
